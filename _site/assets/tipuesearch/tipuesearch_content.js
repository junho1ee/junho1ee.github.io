var tipuesearch = {"pages": [{
    "title": "블로그시작",
    "text": "블로그 시작 Ruby jeckyll hydjack theme 블로그 개설 사용법 익히는 중입니다.",
    "tags": "",
    "url": "/2023-05-02-%EB%B8%94%EB%A1%9C%EA%B7%B8%EC%8B%9C%EC%9E%91/"
  },{
    "title": "",
    "text": "",
    "tags": "",
    "url": "/404.html"
  },{
    "title": "CHANGELOG",
    "text": "v9.1.6 v9.1.5 v9.1.4 v9.1.3 Added Fixes Design v9.1.2 v9.1.1 v9.1.0 Added Changed Fixes v9.0.5 v9.0.4 v9.0.3 v9.0.2 v9.0.1 v9.0.5 v9.0.4 v9.0.3 v9.0.2 v9.0.1 v9.0.0 Major Minor Design Fixes v8.5.2 v8.5.1 v8.5.0 Changed Added Fixed v8.4.0 v8.3.0 Added Changed v8.2.0 v8.1.1 Fixes v8.1.0 Breaking Changed Added v8.0.0 Breaking Changed Added Fixes v7.5.1 Changed v7.5.0 Added Fixed Other v7.4.2 Fixed v7.4.1 Fixed v7.4.0 Added Fixed Design Other v7.3.0 Added Fixed v7.2.0 Added Design Fixes v7.1.1 Fixes v7.1.0 Changed Fixes Content v7.0.1 Fixes Content Removed v7.0.0 License Change Breaking Changes Added Performance Design Fixes v6.6.1 v6.6.0 v6.5.0 Added Changed Design How to restore the old styles v6.4.1 v6.4.0 Minor Design Fixes v6.3.0 Minor Design Fixes v6.2.0 v6.1.1 v6.1.0 v6.0.0 (JavaScripten) Major Minor Fixes v5.3.0 v5.2.0 v5.1.0 v5.0.0 (The Fast One) Major Minor Trivia v4.0.1 v4.0.0 (Social Media Impocalypse) Breaking New features Design Fixes Internal v3.0.0 (Hydejack) Features v2.0.0 (Hyde) v1.0.0 (Hyde) v9.1.6 Feb 07 2022 Removed unused clap button HTML tags Fixed an issue with using featured projects on the welcome layout Minor style adjustments Updated dependencies v9.1.5 Nov 30 2021 Now works with Ruby 3.0 Fixed theme color issue when using multiple theme colors Fixed UTF-8 characters not rendering correctly in breadcrumbs Fixed empty string warning in resume layout Removed clap button info box v9.1.4 Mar 30 2021 Fixed scroll position restoration in webkit. Fixed an issue that caused clap button to use canonical url incorrectly. v9.1.3 Mar 28 2021 Added Allow setting custom Google Fonts providers via google_fonts_url (#264). Defaults to https://fonts.googleapis.com. Fixes Merged #266 — Fixed a bug that caused incorrect links to be rendered. Merged #267 — Fixed a bug that caused incorrect sub-titles when using multiple categories/tags. Fix #262 — Fixed a bug that causes warnings when not providing a skill level / fluency level in the resume. [PRO] Fixed a bug preventing scrolling when using sticky ToC with certain aspect ratios. Design [PRO] Adjusted calculation to dark mode background color to prevent red tint of grey colors Hide underline in tooltips Show clap button on collection pages Show dingbat in plain layout v9.1.2 Feb 11 2021 Fix #258 Fix #259 v9.1.1 Feb 9 2021 Added tooltips to post subtitles and last-modified-at lines. Added tooltips to abberavations (&lt;abbr&gt; tags), e.g. IIAFE. See Example Content on how to use them in markdown. Added tooltips to social media icons (inside main column only) Fixed KaTeX font rendering [PRO] Setting clap_button: false will hide the clap button preview, even in development [PRO] A overscrolling ToC will scroll itself to keep the active element in view. v9.1.0 Feb 5 2021 Version 9.1 provides minor design changes, new features, and closes multiple issues: Added Code blocks now can have headers: // file: 'hello-world.js' console.log('Hello World!'); To add the headers, simply make the first line a comment of the form file: \"dir/filename.ext\". Code blocks now have a copy-to-clipboard button Resumes can now have download buttons. Add the following to the front matter. Note that the PDF needs to be pre-generated. See the docs for more. # file: \"resume.md\" buttons: print: true pdf: /assets/Resume.pdf vcf: http://h2vx.com/vcf/&lt;!--url--&gt; json: /assets/resume.json Added breadcrumbs above page title: Note that this requires a directory-like URL pattern like /blog/:categories/:year-:month-:day-:title/ (default for Hydejack). Disable with hydejack.no_breadcrumbs. Added “Last modified at” to post layout: To enable this feature, the post needs to have a last_modified_at property with a valid date. You can either set it manually in the frontmatter (not recommended), or use the jekyll-last-modified-at plugin to set it for you (Not available on GitHub Pages!). You can remove this element by setting hide_last_modified in the front matter. You can disable it for all posts by setting hydejack.hide_last_modified in the config file. Setting hydejack.hide_dates (PRO version only) will also remove it, together with all other time-related UI elements. You can customize the hover text, icon, and date format in _data/strings.yml using the following keys: last_modified_at (hover text), last_modified_at_icon (icon name, default: icon-history) and date_formats.last_modified_at (date format, default: %Y-%m-%d). Added option to “invert” / darken the font colors in the sidebar. This enables use of bright sidebar images. Set invert_sidebar: true in the font matter to enable. Use defaults in the config file to enable this for all pages. Added a demo of Clap Button during development. Added option to configure border radius Added dingbat to page layout Added plain layout that comes without a dingbat Added smaller and larger CSS classes that set the font size to the respective values. Added options to change the file paths to favicon and apple touch icon in the confog file. Use favicon and apple_touch_icon respectively. Changed Added border radius to many elements Modernized table design [PRO] Setting hydejack.advertise: false will now remove the banner from the HTML and the JavaScript console. Changed the box shadow of cards (projects, posts) to reduce the amount of painting the browser has to do on when mouse hovering them. The layout when using the theme without the no_break_layout setting is now Fixes Allow transparent project and post images Removing/leaving out the logo key in the config file will now correctly remove the logo from the sidebar [PRO] Fixed a bug that caused blog posts to be included the the search even when set to sitemap: false in the front matter. v9.0.5 Sept 8 2020 Added GitHub Pages Starter Kit to PRO version Added chapter on how to deploy PRO on GitHub Pages JavaScript source files now included in PRO zip again Updated default config file Changed default code font Improved fallback image in dark mode v9.0.4 July 15 2020 Fixed image fade in animation for images with srcset Slightly increased size of post and project cards Added page margin to print layout Fixed KaTeX when JavaScript is disabled Fixed a layout bug in the resume layout when changing the content width in variable Fixed table of contents sticky breakpoint v9.0.3 July 9 2020 Updated print resume style Updated docs for GitHub Pages Slightly decreased size of dark mode icon Fixed a bug that caused a GitHub Pages build to fail with an empty configuration file Changed default icon so that it less resembles slashdot.org~~ v9.0.2 July 7 2020 Fixed a bug that prevented the search from updating when offline is enabled Fixed a bug that caused search terms to get lost during initialization Fixed a bug that prevented site.legal from getting stored for offline during service worker installation Added support to for no-cache param to service worker. v9.0.1 July 6 2020 Changing app icons has been revamped. See this section in the docs. Changed default icons Changed default sidebar background Added jekyll-compose defaults to config file Slightly adjusted dark mode colors Fixed resume layout breakpoint v9.0.5 Sept 8 2020 Added GitHub Pages Starter Kit to PRO version Added chapter on how to deploy PRO on GitHub Pages JavaScript source files now included in PRO zip again Updated default config file Changed default code font Improved fallback image in dark mode v9.0.4 July 15 2020 Fixed image fade in animation for images with srcset Slightly increased size of post and project cards Added page margin to print layout Fixed KaTeX when JavaScript is disabled Fixed a layout bug in the resume layout when changing the content width in variable Fixed table of contents sticky breakpoint v9.0.3 July 9 2020 Updated print resume style Updated docs for GitHub Pages Slightly decreased size of dark mode icon Fixed a bug that caused a GitHub Pages build to fail with an empty configuration file Changed default icon so that it less resembles slashdot.org~~ v9.0.2 July 7 2020 Fixed a bug that prevented the search from updating when offline is enabled Fixed a bug that caused search terms to get lost during initialization Fixed a bug that prevented site.legal from getting stored for offline during service worker installation Added support to for no-cache param to service worker. v9.0.1 July 6 2020 Changing app icons has been revamped. See this section in the docs. Changed default icons Changed default sidebar background Added jekyll-compose defaults to config file Slightly adjusted dark mode colors Fixed resume layout breakpoint v9.0.0 July 3 2020 Major Added Built-In Search Functionality Hydejack now has its own built-in search solution, that integrates well with the existing page style and the new navbar. The solution is entirely browser-based which means it even works while offline and doesn’t depend on an 3rd party. This works, because Hydejack is designed for personal sites that generally have less than 1000 pages. In my testing, Jekyll build times have been a problem long before search query times. The results of the search are surprisingly good, but have only been tested in English and (somewhat) German. For better language support, I might build an integration with Algolia at some point, which has the best results, but requires stable internet connection and an API key. I’d be interested to hear about problems with search in other languages to determine if this is necessary. Added Table of Contents that is prettier, sticky, and dynamic. Adding a table of contents is part of kramdown and can be done in all versions of Hydejack. However, v9 adds a dynamic version that will stick to the 3rd column on large screens and highlight the current section. Note that this will reduce the amount of space freed up by the no_break_layout: false setting (otherwise the ToC would overlap with code blocks, math blocks, etc). Added a scroll-linked navbar that disappears when scrolling down and re-appears when scrolling up. Math support has been revamped because the old solution stopped working with Jekyll 4. Hydejack now supports both KaTeX and MathJax. The MathJax implementation is more similar to the old solution. It comes with a client-side runtime (MathJax in this case) and works on GitHub Pages. It is the more heavy-weight of the two and doesn’t work without JavaScript enabled. Due to the size of the complete MathJax package, it only works partially with offline support enabled. The KaTeX implementation has been changed to pre-render the KaTeX output during site building. It does not ship a client-side runtime, which is more lightweight and works without JavaScript. In my opinion, it is the more elegant solution, but it requires a JavaScript runtime on the machine that builds the site. This means that this solution doesn’t work on GitHub Pages. You can switch between the two implementations by changing the kramdown.math_engine key to either katex or mathjax in your config file. The KaTeX implementation also requires the kramdown-math-katex gem in your Gemfile. Drastically improved build times through the use of jekyll-include-cache. Most of the previous tips on improving page build speed should now be obsolete. Added grid layout in PRO version that mirrors the projects layout, but for posts. If you’ve set images for your posts, it will give your blog a more modern look. Minor CSS variables are now configurable via _data/variables.yml. While there are other ways to change them, this has the broadest reach across HTML (img[sizes] attribute!), CSS and JS. Many JS content features (such as # heading links) now work even when hydejack.no_push_state is enabled. Linking to posts in the home and post layout now accept either paths or URLs. Read more. The star icons in the resume layout can now be disabled via no_skill_icons and no_language_icons. Resume layout now supports the following keys: born, citizenship, and maritalStatus. PRO only: Added hide_dates option to disable showing blog post dates. The blog layout now works without pagination, simply showing all posts on a single page when the jekyll-pagination plugin is not found. The projects, resume, and grid layout now make better use of large screens, by letting content expand to the right of the screen. Restore the previous , set no_break_columns in front matter. Removed smooth scroll polyfill for Safari/Webkit as it has caused problems with sticky content. Figure captions can now be added to code blocks, math blocks, and tables in addition to just images using the .figcaption CSS class. The order of the comment section relative to the about and related posts sections can now be customized via the hydejack.post_addons and hydejack.project_addons keys. See the example _config.yml for more. Clicking the image in the blog layout will now navigate to the blog post. In the PRO version it will do so with the classic “move image in place” animation. Grouping projects by year can now be disabled. Use no_groups: true in the front matter. This also applies to the new grid layout and the old list layout. hy-img has been removed and replaced with browser’s native loading=lazy attribute Now serving separate JavaScript files for old and new browsers, allowing it to take advantage of many new language features. JavaScript files are now chunked, so that only what is needed is loaded on demand. hy-drawer and hy-push-state have been rewritten in TypeScript and LitHTML, fixing many bugs in the process. Updated to Jekyll 4.1 Hydejack now has a dedicated offline page that will be shown when the client is offline and tries to open a page that hasn’t been cached. The content of the page can be customized by creating offline.md file in the root with layout: offline, similar to 404.md. The code font can now be customized in the config file via the font_code key. Design Many layouts (projects, resume, home) will now use more space on large screens (disable via hydejack.no_third_column) Headings now appear “oversized” on larger screens and extend to the right end of the screen (disable via hydejack.no_large_headings) The base font size is now smaller across screen sizes (can be configured in _sass/_variables.scss) The content width is now larger across screen sizes (can be configured in _sass/_variables.scss) The link style has been changed to make picking accent colors easier for dark mode. It’s also possible to link images now without worrying about underlines. The amount of whitespace has been reduced. Previously it had been increased but it felt too much. Added a note class that succeeds the message for adding auxillary content. The message class still exists. The navbar buttons made to look more like buttons Dark mode colors have been toned down a bit Improved dark mode text rendering on macOS The permalink style has been changed to use “#” instead of an icon. Definition list now have a double colon after the definition term. Changed the style of footnote links on small screens to make them easier to click. Fixes Horizontal scrolling on a code block, math black, or table can no longer accidentally open the drawer. The client-side scripts are now more robust to missing HTML elements. This should ease theme customization. Setting sitemap: false will now also add a noindex meta tag to prevent accidental search engine indexation. Fixed back button not showing when opening in standalone mode for the first time. The menu icon is now hidden when the drawer is disabled. Using no_drawer: true is now working properly on cover pages when no_push_state: false is set. Reduced the amount of pixels cached by the will-change optimization and fixed the corresponding warning in Firefox. v8.5.2 August 31 2019 Fixed breaking builds due to name collision when upgrading to 8.5 This is caused when using both _plugins/jekyll-replace-imgs and the new jekyll-replace-img ruby gem. I recommend deleting _plugins/jekyll-replace-imgs when using the jekyll-replace-img gem. Note that this is an optional plugin. Fixed nomodule script loading for Safari 10.1 Fixed #176 v8.5.1 Aug 1 2019 Fixed minification bug v8.5.0 Aug 1 2019 Changed [PRO] The theme now matches the operating system’s dark mode. Scrolling down on a page with an open drawer will now close the drawer Reloading a cover page after the drawer has been closed will now open the page with the drawer closed Removed JavaScript-based web font swapping in favor of using font-display: swap Darkened font color in dark mode to reduce contrast Updated KaTeX to the latest version Increased the durations of various animations slightly Now using jekyll-replace-img instead of custom code in _plugins folder Added a separate, smaller JavaScript bundle for modern browsers Added Added support for figure captions on code blocks Added keybase to social media icons [PRO] There’s now a forward button when using the theme as a PWA Fixed Fixed print layout when dark mode is enabled Using CSSTransformValue correctly Fixed a minor style bug for dates Fixed a bug where light mode would flash when loading a page in dark mode Minimal support for IE11 v8.4.0 Mar 9 2019 Added support for noindex property in the front matter Fixed ordering of selected projects/post in welcome layout Updated dependencies v8.3.0 Feb 18 2019 This version adds new options to increase production build speed. Read this post for details. Added Added no_page_style config option to increase site build speed. Added menu config option to increase site build speed. Copying math will now add the LaTeX source to the clipboard. Changed Upgraded KaTeX to version 0.10.0. v8.2.0 Feb 1 2019 Added support for custom related_posts Removed footer from print layout Increased photo size in print resume Improved welcome layout generation performance Fixed a bug that prevented scrolling to headlines with non-ascii characters (Thanks @ForelaxX) v8.1.1 Sep 1 2018 Fixes Fixed an issue that prevented the drawer from working on iOS 10. Changing the page via push state will now also update the link[rel=canonical] tag. Changing the page via push state will now also update the meta[name=description] tag. Fixed an issue that prevented the JS from building on Netlify. v8.1.0 Aug 18 2018 This release adds Dark Mode for Hydejack PRO customers. Breaking Removed cookie banner from free version Removed offline support from free version In an attempt to make the PRO offering more appealing, I’m removing features that arguably should have never been included in the free version. As software licenses go, nobody is stopping you from using the old code, but updates will no longer be included. Changed The cookies banners is now showing at the bottom of the page and its background color is no longer transparent to increase visibility Changed the default syntax theme from “GitHub” to “Atom One Light” Adapted figure CSS class to accommodate different children, not just imgs video tags now have a max-width of 100% Increased margin before headings to 5rem, up from 4 Increased margin of hr elements. Cookies banner can now be enabled without using Google Analytics Clicking the cookie banner “Okay” button will now fire a hy--cookies-ok event on document, so that custom analytics solutions can plug in. All Google Analytics code has been removed from Hydejack’s core and moved to _includes/body/analytics.js. All Disqus code has been removed from Hydejack’s core and moved to _includes/comments.html and _includes/my-comments.html. Using CSS Custom Properties instead of SASS variables for certain properties to enable style customization using only CSS. Added shadow to sidebar Navbar is longer positioned fixed Added [PRO] Added Dark Mode border CSS class v8.0.0 Jul 16 2018 So far Hydejack has been a decent Jekyll theme, but with v8 it really starts stand out among the competition: Beautiful and unique landing pages, lazy-loading images, and experimental offline support are just the most prominent new features. Breaking The expected format for sidebar images has changed. A sidebar image should now be a full-screen ~16:10 image. Comment: The sidebar can now be fully extended on desktop, which generally requires a large landscape image to fill the entire window. To save bandwidth, you can blur the image on the left and right edges and save it as JPG. The about and welcome layout no longer prepend the content with the author information. Instead, the author info can be shown by adding the &lt;!--author--&gt; marker to the top of the file. You can also place it anywhere else. Comment: Showing the author description on the top of the welcome and about layouts felt like an imposition and was a left-over from when I was developing Hydejack primarily for myself. [PRO] The welcome layout no longer adds recent posts and projects to the bottom of the page. Instead, they have to be explicitly set using the &lt;!--posts--&gt; and &lt;!--projects--&gt; markers. The content_separator front matter opton is now ignored. Comment: The old behavior felt arbitrary, and &lt;!--more--&gt; wasn’t a good name to be replaced with recent projects ands posts. Setting the accent color and sidebar image for an entire category/tag/author is no longer possible. To achieve a similar effect, use Front Matter defaults instead. E.g. to set the accent color and image for every post in the hydejack folder, use: defaults: - scope: path: hydejack values: accent_color: rgb(38,139,210) accent_image: /assets/img/hydejack-bg.jpg Comment: The code to find the color for a given page was complicated and slow (potentially iterating all categories/tags to find the right one). Changed The drawer now responds to mouse inputs. The default heading font is now less bold. To restore the old behavior, edit (create if it’s missing) _sass/my-variables.scss and add $font-weight-heading: 700;. Hydejack now uses lazy-loading hy-img tags instead of regular img tags. To revert to using regular images, set hydejack.no_img in the config file to true. Cookie consent is now stored as a cookie (instead of LocalStorage) and expires after 1 year. Scrolling to a fragment link is now smooth. Font loading now works differently, and will be cancelled on slow connections. The sidebar content is now centered. The sidebar will now show the site’s logo, which can be set in the config file under the logo key. [PRO] Updated embedded Bootstrap to v4. [PRO] Project cards now throw a shadow instead of having a border. Added Pages can now have the cover key in the front matter. When set to true, the sidebar will be opened when visiting the page directly. E.g. https://hydejack.com/ Added a _plugin that automatically replaces &lt;img&gt; tags with lazy-loading &lt;hy-img&gt; tags. If you don’t want images to load lazily, delete or rename the _plugins folder. Note that this plugin will never run when building the site on GitHub Pages. To get the most out of this plugin, it is recommended to provide the width and height of the image, e.g. ![Some image](assets/img/some-img.png){:width=\"800\" height=\"600\"} This will cause hy-img to render a placeholder of 800 by 600 px, preventing the document height from changing after the image has finished loading. Added experimental offline support via Service Workers. Use with care! For details, read the docs. Added the figure CSS class, which allows images to have nicer-looking captions. E.g. ![An image with a caption](https://via.placeholder.com/800x50){:.lead} A caption to an image. {:.figure} Clicking on a footnote will give its corresponding text a subtle highlight. [PRO] Projects can now have an optional end_date field in the front matter. The date is treated as the start date in this case. Fixes The back button now works in combination with fragment links. v7.5.1 Apr 2 2018 Changed Moved from browserify to webpack Updated ruby dependencies Updated JS dependencies Updated hy-push-state and hy-drawer to latest versions v7.5.0 Dec 18 2017 Added Added secondary legal nav in footer: # file: `_config.yml` legal: - title: Cookies Policy href: /cookies-policy/ - title: Foobar href: https://foobar.com/ The “heading permalink” can now be configured via strings.yml: # file: `_data/strings.yml` permalink: Permalink permalink_icon: icon-link Sections on resume layout can now be rearranged, e.g.: # file: `resume.md` left_column: - work - volunteer - education - awards - publications - references right_column: - languages - skills - interests Fixed Fixed a bug that caused &lt;sup&gt; tags to render as regular text (#52) Fixed a bug that caused Disqus to load the same thread on all pages (#53) Fixed a bug that prevented Disqus comments to be loaded on sites that didn’t cause scroll events Fixed a bug that caused Disqus to be loaded over HTTP instead of HTTPS. Fixed a bug that caused an extra space in URLs (#55). Comments no longer show up in the print version of the page. Other Set base font to 11pt in print layout. Set resume print layout to use 2 columns (A4 sheet) v7.4.2 Dec 1 2017 Fixed Dramatically improved resume print layout. It is now much less likely that there will be page breaks within logical units. Fixed a bug that cause the page to break when setting no_drawer. Fixed a bug that cased the “Random Posts” heading to appear, even when there are no posts to show v7.4.1 Nov 27 2017 Fixed Fixed storing user-related data before accepting cookies. Fixed tab order of cookie banner, so keyboard users can access it more easily. Accepting cookies no longer causes a page reload in some browsers. Fixed appearance of the okay button in the free version. Menu icon now useable while the cookies banner is active. Loading icon is now visible while the cookies banner is active. Removed cookies banner from print layout. Removed inline styles from cookie banner. v7.4.0 Nov 25 2017 Added Allow markdown in copyright string Added theme_color front-matter property to micro-manage the value of the the theme-color meta tag. When not set, will use accent_color. Added theme_color site setting, to set the value of themeColor in the app manifest. When not set, will use accent_color. Added cookies_banner setting: # file: `_config.yml` hydejack: cookies_banner: true Enabling this setting will show a notice at the top of the page to new visitors. You can change the wording of the notice in _data/strings.yml with the cookies_banner.text and cookies_banner.okay keys: # file: `_data/strings.yml` cookies_banner: text: This site uses cookies. okay: Okay Fixed Drawer no longer resizes/repaints in iOS Safari (iPhone) and Chrome for Android when the address bar autohides. Fixed a bug that caused the drawer flicker/open unexpectedly when scrolling in mobile browsers. Fixed how image works when using the jekyll-seo-tag plugin. Design Changed how line breaks work in resume layout Changed margins of horizontals lines Other Updated docs Updated posts v7.3.0 Nov 17 2017 Added Allow markdown content on projects layout. Renamed big_project option on projects to featured (big_project still works) Fixed Fixed default font weights Fixed hard-coded /projects/ URL in project layout Link to feed.xml is only generated when using the jekyll-feed plugin v7.2.0 Nov 13 2017 Added Added _sass/my-variables.scss file, which you can use to selectively override SCSS variables. Font weights can now be configured via SCSS variables: $font-weight for normal font. $font-weight-bold for strong tags and similar. $font-weight-heading for headings. Design Message boxes will no longer span the full width, even with the break layout feature enabled. Increased space between project card rows, so they look less like a brick wall. Fixes Reduced the draw range of the drawer on iOS, so that a larger portion of the screen is available for zooming (a11y). Default images are now optimized, so they are no longer flagged by Google PageSpeed Insights and similar tools. Query parameters are no longer used for cache busting. Instead, the version number is no part of the file name for the CSS and JS resources. v7.1.1 Nov 3 2017 Fixes Fix IE11 feature detection v7.1.0 Nov 2 2017 Changed Renamed no_description to hide_description. Since this feature isn’t yet documented outside of the change log, the old name will not continue to work. When providing images to image, image.path, image.src, image.srcset and accent_image , it is no longer necessary to prepend the url with the baseurl of the site, e.g. values like accent_image: /assets/img/sidebar-bg.jpg are now valid. Limited scope of a and img styles to content areas. Upgraded KaTeX to v0.8.3 Upgraded jekyll-relative-links to v5.0.1 Fixes font and font_heading are now properly set when using the no_inline_css option #47. Fixed default values for image and logo that were referring to non-existing images. Added missing JS dev dependencies. Content Updated documentation Updated index, download, about and README pages. v7.0.1 Oct 27 2017 Fixes Removed readme files from assets that would show up as pages when building on GitHub Pages #42. Disabled push state on Firefox for iOS Changed some default settings in _config.yml Content Updated documentation Removed Removed outdated example script in my-scripts.html v7.0.0 Oct 24 2017 License Change The free version of Hydejack is now GPL-3.0 licensed, which is a more restrictive license than MIT (but still Open Source). This was necessary because the two major components that make up Hydejack, hy-push-state and hy-drawer, are now GPL licensed in turn. How will this affect you? If you bought the PRO version you are not affected at all. You can continue to use previous versions of Hydejack according to their license (MIT). If you upgrade, keep the source code in a public repository and make sure you include the new LICENSE.md file. DO NOT publish the new code with an old license. If you upgrade and make changes to the source code, you are required to make those changes available to the public under a GPL-3.0 compatible license. The full license text is available here. You can read a summary on tl;drLegel. If this change is not acceptable to you, DO NOT upgrade or consider buying a PRO license. Note that the above does not constitute legal advice. Breaking This is a major release, but almost all options and APIs that were described in the docs continue to work. Some names have changed and are no longer mentioned in the docs, but they are still part of the code and continue to work. That being said, you should be aware of these (small) breaking changes: The favicon is now located in assets/icons. To change the favicon of the page, edit favicon.ico (png) in the folder. Changed the way tables work, so that they do the right thing more often. Tables are now scrollable by default, but small tables are no longer stretched to span the full width. Setting scroll-table on a larger table is sill recommended, as it will set white-space: nowrap. Autogenerated ids for posts now look like post-2017-01-01-my-title instead of post-2017/01/01/my-title. Event names described in the scripting chapter have changed from y-push-state-* to hy-push-state-*, except y-push-state-animationend, which has been removed. See the docs for more. Changes image has been renamed to accent_image, but image continues to work unless you add the jekyll-seo-tag plugin. This change was necessary because jekyll-seo-tag uses the image keyword to set the thumbnail image of a page. While it may be desirable to use the same image for both the sidebar and the thumbnail, the new preferred way to set sidebar images is by using the accent_image key. color has been renamed to accent_color to be consistent with the new accent_image key, but color continues to work. Various options that do not make sense outside the context of Hydejack (like no_push_state or no_drawer) have been moved under a common hydejack key. However, the old options continue to work. hydejack: no_push_state: false no_drawer: false All plugins (gems) are now optional. The gem-based version of the theme no longer uses any plugins by default, while the download version follow a “batteries-included” approach and enables some by default. Links to the /assets/ folder are no longer intercepted by the push state features, which means clickable images and download links should work fine now. Reader views in Firefox and Safari have an easier time recognizing the main content. [Internal] No more &lt;style&gt; tags in the body. [Internal] Content that is generated via JS (error pages, loading, etc…) is now cloned from template tags, where it is easier to modify (but before you do, check out the new _data/strings.yml file). [Internal] Changed how CSS code is organized. Previously there were two versions of each CSS file for each ‘topic’, one containing core styles to be inlined into the page, the other containing those fetched asynchronously via link tag. Now there is only one file per topic, with the parts to be inlined/linked marked with comments. A script has been added to “split” the CSS into the inline/link parts. Note that this does not affect your my-*.scss files. [Internal] Many CSS classnames have changes, specifically those that would conflict with Bootstrap class names. [Internal] Many files in _includes have been reorganized, specially head.html and body.html have been broken up into smaller parts. [Internal] The y-drawer component (MIT) has been replaced with the hy-drawer component (GPL-3.0). [Internal] The y-push-state component (MIT) has been replaced with the hy-push-state component (GPL-3.0). Added The theme now has support for the jekyll-seo-tag plugin. To use this gem, make sure you use the latest Gemfile and Gemfile.lock and run bundle install. In your config file, add jekyll-seo-tag to plugins (formerly called gems). All texts that were previously hard-coded into the theme can now be configured via _data/strings.yml. This makes it possible to change certain phases without having to change source files, but it should also make it easier to use Hydejack with other languages. Time and date formats can also be configured, using Ruby’s format directives. The lang key now accepts values like en-us or de_AT. Made the site “mobile web app capable” Added manifest.json for “Add to Homescreen” support on Android Added theme-color meta tag that matches the accent_color and changes dynamically Added apple-mobile-web-app-* meta tags Added ieconfig.xml for “Pin to start menu” support in Windows 10. Old icons and new ones are now located in assets/icons. Hydejack now marks up content as structured data, to the extent possible. The resume is provided as https://schema.org/Person as well as hCard, while projects are provided as https://schema.org/CreativeWork. You can use the Structured Data Testing Tool to see the results. If you do not want to expose your data in machine-readable form, you can set the no_structured_data flag to true in your config file. hydejack: no_structured_data: true Note that this only applies to the resume and project layout, not the data generated by by jekyll-seo-tag (Facebook Open Graph and Twitter cards). [PRO] Added “big projects”. You can make a project card span the entire content width (instead of half), by setting big_project to true in the project’s front matter. [PRO] The welcome layout now has a content_separator option, which allows content to move below the “Selected/Latest Projects” and “Selected/Latest Posts” section. Usage: --- layout: welcome content_separator: &lt;!--more--&gt; --- Content above &lt;!--more--&gt; Content below [PRO] The PRO version now has built-in support for Tinyletter. To show a newsletter subscription box below each post, set tinyletter: &lt;username&gt; in your config file. If you want to use a different mailing provider, you can add your own form in _includes/my-newsletter.html. [PRO] The PRO version now includes styles for input elements, using the same CSS class names as Bootstrap. Check out the Bootstrap docs to learn more. [PRO] Added links to random posts at the bottom of each post. This can be beneficial for search engine rankings and content discovery. You can remove them with the new post_addons option (see below). [PRO] If a endDate is missing in your resume.json, it will render as “&lt;startDate&gt; – present”. You can change the wording in the new strings.yml file. Added support for jekyll-avatar. If this plugin is enabled in your config file, it will show the avatar of your github account (author.social.github, author.github.username author.github). Added support for jekyll-gist. You can now add links to external sites in the sidebar. Create a file like something.md and add a title, menu, order (optional) and a redirect_to field to the front matter, e.g.: --- title: External menu: true redirect_to: https://example.com/ --- You may combine this with the jekyll-redirect-from plugin to generate a redirect page, but this is optional. You can now configure the order of complementary content below posts and projects. By default, Hydejack will show the author first (if any), the newsletter box next (if any), and related posts/projects last. hydejack: post_addons: [about, newsletter, related, random] project_addons: [about, newsletter, other] To change the order in the output, change to order in the array. You can also drop entries from the output by removing them from the list. Added an error page that is shown when client-side network errors occur. It contains a link to retry loading the page. Previously, the browser’s default error page would have been shown. Added hide_description option to pages to prevent the content of description fields to show up in the output. This allows you to use the description field in the front matter to set descriptions for search engines and sharing on social media, without having to worry about the output. You can activate this for all pages by adding to your config file: defaults: - scope: path: '' values: hide_description: true Added a new option called no_inline_css. When true, Hydejack will generate a single CSS file to be fetched (synchronously) via link tag, instead of inlining half and including the rest via link tag. This option may be useful when serving content over HTTP/2, but you should perform your own tests. For more on inlining CSS, see this. hydejack: no_inline_css: true Added dns-prefetch links to Google Fonts and Google Analytics domains to further boost page load speed. These are only included when using Google Fonts/Analytics. You can now define an arbitrary CSS background for the sidebar instead of just images, e.g.: accent_image: background: 'linear-gradient(to bottom, rgba(35,62,76,1) 0%,rgba(60,146,158,1) 50%,rgba(213,213,212,1) 100%) #4fb1ba' Category and tag pages can now have arbitrary content (to be shown above the list). Links can now be marked for FLIP animations by adding the flip-title class. Use this for links that have the exact same text as the title of the page they are linking, e.g. [NOTICE](/NOTICE/){:.heading.flip-title}. Performance Reduced building time during development. Roughly 50% of the time was spent rebuilding the inline CSS, which is now built once and included via link tag. Production builds still inlines CSS, so the building speed remains unchanged. For more on how to improve building speeds, see here. Design The default background image is no longer anti-selling the theme… Code blocks, math blocks and tables now use as much space as there is available on the screen. Limiting the line length makes sense for paragraphs, as they are more difficult to read when they span the entire length on a large display, but it is less useful for content, like tables, long formulas or code. If you do not like this change, you can set no_break_layout to true in your config file. hydejack: no_break_layout: true Margin below code blocks, math blocks and tables increased from 1rem to 2rem. Gray text now has a higher contrast ratio: I don’t want anybody to “suffer from design”. Reduced the number of responsive breakpoints. Added a hover effect on project images. On mobile, footnotes will be shown as [1] instead of superscript, making them easer to tap. The sidebar now has a subtle shadow on mobile, to indicate that it can be drawn from the side. The sidebar now has less margin on the sides. The sidebar now fits 5 social media icons, up from 4. The description in the sidebar now has a smaller font size when it is longer than 100 characters. This is to encourage writing a longer description for search engines (~160 characters). h1, h2 and h3 headings now have different line-heights to improve readability when they span multiple lines. Marks on external links are now less opaque, but have a hover effect. More responsible usage of font_heading in resume layout. When hovering over a headline, a # link will appear, so that readers can link to individual headlines. Changed the loading spinner to use a single icon instead of several animated divs. Fixes When linking to an internal document that doesn’t match the regular content structure, the ‘hot replacement’ will no longer get stuck, and reload the page instead. Fix jumping to # links after navigating to a new page. Fix jumping to # links in MS Edge. Fixed a bug on iOS were scrolling was blocked after closing the drawer. Fixed a bug where the image used during the project FLIP animation would note be replaced with the higher resolution image after the animation in certain browsers. The drawer is now less likely to be opened by accident. v6.6.1 Aug 10 2017 Fixed sending incorrect paths to Google Analytics. In previous versions, Hydejack would always send the URL of the initial page for all subsequent page views. Thanks @dannydwarren for pointing this out. Fixed tagline not showing up in the title. v6.6.0 Aug 7 2017 Dependencies from external domains have been removed (with the exception of those that are explicitly defined and optional: Google Analytics, Google Fonts and Disqus). Instead, they are now located in the assets folder and managed via Bower. KaTeX is no longer loaded on pages that do not contain math blocks. preload link tags no longer use onload. Instead callbacks are registered within a script tag. Code in code blocks is no longer smaller sized than inline code. To undo this change, open (or create) _sass/my-inline.scss and add the following: pre code { font-size: .75em; } Added _includes/my-head.html, to make it easier to add things to the &lt;head/&gt; without modifying the source. This is especially useful when using the gem-based version of the theme. v6.5.0 Jul 27 2017 This maintenance release includes various quality-of-life improvements when using the gem-based version of the theme. Added Hydejack now uses additional Jekyll plugins by default, which make working with GitHub more convenient. They have been added to the Gemfile and _config.yml. Note that existing users need to update their _config.yml: gems: - jekyll-default-layout # new - jekyll-feed - jekyll-optional-front-matter # new - jekyll-paginate - jekyll-redirect-from - jekyll-relative-links # new - jekyll-sitemap Added licenses folder that includes the full license texts of licenses mentioned in NOTICE.md. You can, once again, define the author in _config.yml. Using _data/authors.yml is still recommended (and takes precedence), but this option is more convenient when setting up a quick (project-) page using the gem-based theme. Also, a mini-version of _data/social.yml can be provided as part _config.yml, e.g.: author: social: github: https://github.com/hydecorp/hydejack npm: https://www.npmjs.com/package/hydejack download: https://github.com/hydecorp/hydejack/archive/v6.5.0.zip data_social: github: name: GitHub icon: icon-github npm: name: npm icon: icon-npm download: name: Download icon: icon-box-add A download icon has been added to the default icon font and _data/social.yml has been updated. Added _includes/my-scripts.html, _sass/my-inline.scss and _sass/my-style.scss to make it easier to add custom scripts and styles without modifying the source. This is especially handy when using the gem-based version of the theme. Changed Loading web fonts now starts earlier and content download no longer blocks swapping out the fallback font for the new font. Previously, a page containing lots of images could have delayed displaying the web fonts significantly. The home layout no longer contains a message suggesting that you don’t use it. The home layout now shows up to 5 blog posts and up to 5 pages blow the regular content. The version history has been moved from docs/&lt;version&gt;/versions.md to CHANGELOG.md. The license notices have been moved from docs/&lt;version&gt;/licenses.md to NOTICE.md. Updated gem and npm dependencies Design The default font has been changed from “Noto Serif” to “Noto Sans”. If you have a font entry in _config.yml, this will have no effect. nap.jpg is no longer used as default background image in the gem-based theme. The sidebar content width is now limited to the width of the sidebar (this only effects large screens). Project cards and pagination buttons now have slightly rounded borders for a less “rigid” look. How to restore the old styles If you would like to use the old font, add the following to _config.yml: font_heading: \"'Roboto Slab', Helvetica, Arial, sans-serif\" font: \"'Noto Serif', Georgia, serif\" google_fonts: \"Roboto+Slab:700|Noto+Serif:400,400i,700,700i\" If you were relying on the default setting for the background image, add the following to _config.yml: image: /hydejack/assets/img/nap.jpg Note that you have to replace /hydejack with your baseurl. To restore the old sidebar, open (or create) _sass/my-inline.scss and add the following: @media screen { .sidebar-sticky { left: 2rem; max-width: none; } } To remove the border radius, open (or create) _sass/my-inline.scss and add the following: .card, .pagination-item { border-radius: 0!important; } v6.4.1 Jun 23 2017 Fix invalid color hex v6.4.0 Jun 21 2017 In this release I’ve added a “Other Projects” section to the bottom of each project page, making it easier for users to navigate through your collection and discover other projects. Also, it’s now possible to display larger (data-) tables that were previously cut off (especially on mobile devices). For more on how to add tables, see the new section in docs/writing. Smaller changes include a reduced usage of horizontal lines and a more “semantic” use of hr elements. Specifically, the semantics of the resume layout have been improved. Minor Added “Other Projects” section to the bottom of the project layout (similar to “Related Posts”) Added CSS classes that make viewing larger (data-) tables possible Added section on tables to docs/writing Reduced use of &lt;hr/&gt; elements, using CSS borders instead. Improved semantic HTML of resume Follow favicon best practices and include example icons Added no_google_fonts option Design Reduced number of horizontal lines, making many layouts feel less “cluttered” (esp. blog layout) Made link hover styles consistent across the board Visually separated thead and tbody and tfoot within tables. Changed RSS and email icons Removed top margin for consecutive headings, e.g. when using h3 immediately after h2. Fixes Fixed bug that caused inline math to be moved to the end of a paragraph when dynamically loading a page. Fixed bug that caused layout to break in IE11. Fixed bug that caused the project animation to “jump” when using long project titles. No more empty attributes on img tags. v6.3.0 Jun 6 2017 This release makes including third party plugins easier. Until now, the push state approach to loading new pages has been interfering with embedded script tags. This version changes this by simulating the sequential loading of script tags on a fresh page load. This approach should work in a majority of cases, but can still cause problems with scripts that can’t be added more than once per page. If an issue can’t be resolved, there’s now the option to disable push state by setting disable_push_state: true in config.yml. Minor Support embedding script tags in markdown content Add disable_push_state option to _config.yml Add disable_drawer option to _config.yml Rename syntax highlighting file to syntax.scss Added chapter on third party scripts to documentation Design Add subtle intro animation Rename “Check out X for more” to “See X for more” on welcome* page Replace “»” with “→” in “read more”-type of links Fixes Fix default color in gem-based theme v6.2.0 May 29 2017 Changed default color and image Updated demo content Finalized welcome and project page Color is now fading correctly when no background image is provided Added exemplary usage of excerpt separator Removed social media links from welcome and about page Updated dependencies v6.1.1 May 23 2017 Add support for lang in front matter and _config.yml. Add support for keywords in front matter and _config.yml. v6.1.0 May 15 2017 Updated JS dependencies Added version history and licenses to documentation Fixed print layout v6.0.0 (JavaScripten) May 3 2017 Hydejack has always featured a JavaScript-heavy sidebar, but other than that, JS has been used sparingly. This changes with this release, which adds a ton of (optional) code that changes the feel of the theme dramatically. Major Pages are now loaded and swapped through JavaScript. This has a number of effects. First of all, it looks cool, but the animations aren’t just about aesthetics: They also help to hide the network time of fetching the next page, making the entire site feel faster. At the same time, the FOUC introduced in the last release will no longer occur (except on the initial page load). Most JS is now unified in the _js directory and written in ES2016. The blog-by-tag layout has been renamed to list. public folder has been renamed to assets to make the theme compatible with Jekyll’s gem-based themes. Tags are now supported via Jekyll Collections instead of _data. The sidebar can now add links to all kinds of pages. Categories are now supported. Author information moved to _data/authors.yml Added support for multiple authors. Using jekyll-feed plugin (supported on GitHub Pages) instead of custom solution. Added about layout. Added not-found layout. Added redirect layout See the the migration guide for instructions on how to upgrade. Minor The “accent” font (heading font) is now used for all headings. This gives the theme a “bolder” look and was necessary for the animation: link =&gt; heading. Changed default text font from “PT Serif” to “Noto Serif”. Added CSS classes for styling markdown content. Links have a new style. They now always display an underline to make the choice of the link color less critical (darker colors were hard to distinguish from regular text). Made social media icons larger and easier to tap. Social media icons are now also part of the “about” sections of a post. Added support for a copyright notice at the bottom. Can be set via the config variable copyright. Changed responsive breakpoints and added support for very large displays. The site is now printable. The blog layout now only shows the excerpt instead of the full post. Links to external pages are now marked with a symbol. Added margin above social media icons to prevent accidental tapping Added gem files so that bundle install and bundle exec jekyll serve work Disabled HTML minification when running via jekyll serve Added dingbat to signal end of post Fixes Related posts is no longer blank for posts that do not belong to a category. Footnotes now use the text version of “leftwards arrow with hook” instead of the emoji on iOS. Text is no longer invisible while waiting for Google Fonts to load. Always show scrollbar to prevent layout “jumps” v5.3.0 Oct 1 2016 a11y improvements Use HTML5 semantics tags + roles Don’t set maximum-scale=1 Fix bug with sr-only class Math support improvements LaTeX syntax errors will no longer prevent correct math blocks from being rendered LaTeX syntax errors logged to console v5.2.0 Sep 29 2016 Prevent structural FOUC v5.1.0 Sep 28 2016 Cross-browser compatibility improvements: Added features tests Fixed layout in IE 10 and 11 Disabled stylesheets and JS in IE 9 and below. v5.0.0 (The Fast One) Sep 16 2016 This major release increases page load speed dramatically. The page now scores roughly 90/100 on Google’s PageSpeed Insights (up from ~50) and has a high score on similar tools. Most importantly, the critical rendering path is no longer blocked by loading styles or scripts, meaning the site becomes visible faster. Page load speed matters to Google, but is also very apparent to visitors with slow internet connections. However, as a side effect of these optimizations, the site now has a visible FOUC. Future versions might address this, but it is the currency in which loading speed is being payed for and can not be fully avoided. Major HTML, CSS and JS served minified. JS downloading starts only after the rest of the page is renderd. Critical CSS (above-the-fold) is inlined into the document, the rest is fetched later. In order to minify the CSS and make it more modular it has been rewritten in SCSS. Minor Colored focus outline in page color Tabindex for tab navigation Social media icons easier tappable with finger Trivia Not strictly part of the release, but the images have been blurred to increase text readability and help with loading speed as well (burred images get compressed by JPG much better). v4.0.1 Sep 11 2016 Fix per-page color and image v4.0.0 (Social Media Impocalypse) Aug 30 2016 Breaking Structure of _config.yml has changed Social media usernames are now located under author: social: &lt;platform&gt;: &lt;username&gt;. disqus is now a top-level entry (moved from author). Now has font, font_accent and google_fonts fields that are mandatory. Now defaults to the blog layout, old style is available via blog-by-tag layout, see archive.html. New features Added a lot of social media icons, configurable via _config.yml. New blog layout. Classic, paginated. Fonts are configurable via _config.yml. Design Link underlines are now fixed-sized for all font sizes (no thicker lines for headlines, etc) Fixes Correctly set the meta description field using either the description field or post.excerpt as a fallback (used to contain the unmodified markdown). Fixed various URL bugs relating to site.baseurl. Internal Refactoring, preventing code duplications, heavier usage of includes. v3.0.0 (Hydejack) May 7 2016 Hydejack is a pretentious two-column Jekyll theme, stolen by @qwtel from Hyde. You could say it was.. hydejacked. Features Unlike Hyde, it’s very opinionated about how you are going to use it. Features include: Touch-enabled sidebar / drawer for mobile, including fallback when JS is disabled. Github Pages compatible tag support based on this post. Customizable link color and sidebar image, per-site, per-tag and per-post. Optional author section at the bottom of each post. Optional comment section powered by Disqus. Layout for posts grouped by year Wide array of social media icons on sidebar. Math blocks via KaTeX. v2.0.0 (Hyde) Jan 2 2014 v1.0.0 (Hyde) Oct 15 2013",
    "tags": "",
    "url": "/CHANGELOG/"
  },{
    "title": "LICENSE",
    "text": "Preamble TERMS AND CONDITIONS 0. Definitions 1. Source Code 2. Basic Permissions 3. Protecting Users’ Legal Rights From Anti-Circumvention Law 4. Conveying Verbatim Copies 5. Conveying Modified Source Versions 6. Conveying Non-Source Forms 7. Additional Terms 8. Termination 9. Acceptance Not Required for Having Copies 10. Automatic Licensing of Downstream Recipients 11. Patents 12. No Surrender of Others’ Freedom 13. Use with the GNU Affero General Public License 14. Revised Versions of this License 15. Disclaimer of Warranty 16. Limitation of Liability 17. Interpretation of Sections 15 and 16 GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program–to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers’ and authors’ protection, the GPL clearly explains that there is no warranty for this free software. For both users’ and authors’ sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users’ freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions “This License” refers to version 3 of the GNU General Public License. “Copyright” also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. “The Program” refers to any copyrightable work licensed under this License. Each licensee is addressed as “you”. “Licensees” and “recipients” may be individuals or organizations. To “modify” a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a “modified version” of the earlier work or a work “based on” the earlier work. A “covered work” means either the unmodified Program or a work based on the Program. To “propagate” a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To “convey” a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays “Appropriate Legal Notices” to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code The “source code” for a work means the preferred form of the work for making modifications to it. “Object code” means any non-source form of a work. A “Standard Interface” means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The “System Libraries” of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A “Major Component”, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The “Corresponding Source” for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work’s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users’ Legal Rights From Anti-Circumvention Law No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work’s users, your or third parties’ legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies You may convey verbatim copies of the Program’s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: The work must carry prominent notices stating that you modified it, and giving a relevant date. The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to “keep intact all notices”. You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an “aggregate” if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation’s users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A “User Product” is either (1) a “consumer product”, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, “normally used” refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. “Installation Information” for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms “Additional permissions” are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or Limiting the use for publicity purposes of names of licensors or authors of the material; or Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered “further restrictions” within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An “entity transaction” is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party’s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents A “contributor” is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor’s “contributor version”. A contributor’s “essential patent claims” are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, “control” includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor’s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a “patent license” is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To “grant” such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. “Knowingly relying” means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient’s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is “discriminatory” if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others’ Freedom If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. 14. Revised Versions of this License The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License “or any later version” applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy’s public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16 If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.",
    "tags": "",
    "url": "/LICENSE/"
  },{
    "title": "NOTICE",
    "text": "Attributions Licenses Hyde hy-drawer hy-push-state RxJS KaTeX core-js Web Animations Modernizr Compress HTML in Jekyll The HTML5 Shiv DOM4 loadCSS Ratchet Swipe smoothState Bootstrap Atom One Light Syntax Atom One Dark Syntax MiniSearch window.fetch polyfill AbortController polyfill for abortable fetch() ResizeObserver Polyfill kv-storage polyfill IntersectionObserver polyfill Web Components Polyfills lit-html Copyright (c) 2020 Florian Klampfer https://qwtel.com/ This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/. Attributions Appropriate credit as per Creative Commons licenses. Work License Changes Photo by Jeremy Bishop Unsplash Liquify filter, blur Photo by Caleb George Unsplash Liquify filter, patch tool, blur IcoMoon Icons Free Version by Keyamoon CC-BY-SA-4.0 None Touch-161562.svg CC0-1.0 Composition Licenses Parts of this software are provided under separate licenses. Hyde This software also uses portions of the poole/hyde project, which is MIT licensed with the following copyright: Copyright (c) 2013 Mark Otto. hy-drawer This software also uses portions of the hydecorp/hy-drawer project, which is GPL-3.0 licensed with the following copyright: Copyright (c) 2018 Florian Klampfer https://qwtel.com/ hy-push-state This software also uses portions of the hydecorp/hy-push-state project, which is GPL-3.0 licensed with the following copyright: Copyright (c) 2018 Florian Klampfer https://qwtel.com/ RxJS This software also uses portions of the ReactiveX/rxjs project, which is Apache-2.0 licensed with the following copyright: Copyright (c) 2015-2017 Google, Inc., Netflix, Inc., Microsoft Corp. and contributors No substantial changes to the software were made. No NOTICE file was provided. KaTeX This software also uses portions of the Khan/KaTeX project, which is MIT licensed with the following copyright: Copyright (c) 2015 Khan Academy core-js This software also uses portions of the zloirock/core-js project, which is MIT licensed with the following copyright: Copyright (c) 2014-2016 Denis Pushkarev Web Animations This software also uses portions of the web-animations/web-animations-js project, which is Apache-2.0 licensed with the following copyright: Copyright 2014 Google Inc. All rights reserved. No substantial changes to the software were made. No NOTICE file was provided. Modernizr This software also uses portions of the Modernizr/Modernizr project, which is MIT licensed with the following copyright: Copyright (c) Faruk Ates Paul Irish Alex Sexton Ryan Seddon Patrick Kettner Stu Cox Richard Herrera Compress HTML in Jekyll This software also uses portions of the penibelst/jekyll-compress-html project, which is MIT licensed with the following copyright: Copyright (c) 2014 Anatol Broder The HTML5 Shiv This software also uses portions of the aFarkas/html5shiv project, which is MIT licensed with the following copyright: Copyright (c) 2014 Alexander Farkas (aFarkas). DOM4 This software also uses portions of the WebReflection/dom4 project, which is MIT licensed with the following copyright: Copyright (C) 2013-2015 by Andrea Giammarchi - @WebReflection loadCSS This software also uses portions of the filamentgroup/loadCSS project, which is MIT licensed with the following copyright: Copyright (c) @scottjehl, 2016 Filament Group Ratchet This software also uses portions of the twbs/ratchet project, which is MIT licensed with the following copyright: Copyright (c) 2015 connors and other contributors Swipe This software also uses portions of the thebird/Swipe project, which is MIT licensed with the following copyright: Copyright (c) 2013 Brad Birdsall smoothState This software also uses portions of the miguel-perez/smoothState.js project, which is MIT licensed with the following copyright: Copyright (c) 2014 Miguel Angel Perez Bootstrap This software also uses portions of the twbs/bootstrap project, which is MIT licensed with the following copyright: Copyright (c) 2011-2018 Twitter, Inc. Copyright (c) 2011-2018 The Bootstrap Authors Atom One Light Syntax This software also uses portions of the atom/one-light-syntax project, which is MIT licensed with the following copyright: Copyright (c) 2016 GitHub Inc. Atom One Dark Syntax This software also uses portions of the atom/one-dark-syntax project, which is MIT licensed with the following copyright: Copyright (c) 2016 GitHub Inc. MiniSearch This software also uses portions of the lucaong/minisearch project, which is MIT licensed with the following copyright: Copyright 2018 Luca Ongaro window.fetch polyfill This software also uses portions of the github/fetch project, which is MIT licensed with the following copyright: Copyright (c) 2014-2016 GitHub, Inc. AbortController polyfill for abortable fetch() This software also uses portions of the mo/abortcontroller-polyfill project, which is MIT licensed with the following copyright: Copyright (c) 2017 molsson ResizeObserver Polyfill This software also uses portions of the juggle/resize-observer project, which is Apache-2.0 licensed with the following copyright: Copyright 2019 JUGGLE LTD kv-storage polyfill This software also uses portions of the GoogleChromeLabs/kv-storage-polyfill project, which is Apache-2.0 licensed with the following copyright: Copyright 2019 Google Inc. IntersectionObserver polyfill This software also uses portions of the w3c/IntersectionObserver project, which is W3C-20150513 licensed with the following copyright: Copyright 2016 Google Inc. All Rights Reserved. No substantial changes to the software were made. Web Components Polyfills This software also uses portions of the webcomponents/webcomponentsjs project, which is BSD-style licensed with the following copyright: Copyright (c) 2019 The Polymer Authors. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of Google Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. lit-html This software also uses portions of the Polymer/lit-html project, which is BSD-style licensed with the following copyright: Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of Google Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "tags": "",
    "url": "/NOTICE/"
  },{
    "title": "Documentation",
    "text": "Here you should be able to find everything you need to know to accomplish the most common tasks when blogging with Hydejack. Should you think something is missing, please let me know. Should you discover a mistake in the docs (or a bug in general) feel free to open an issue on GitHub. While this manual tries to be beginner-friendly, as a user of Jekyll it is assumed that you are comfortable running shell commands and editing text files. Getting started Install — How to install and run Hydejack. Upgrade — You can skip this if you haven’t used Hydejack before. Config — Once Jekyll is running you can start editing your config file. Using Hydejack Basics — How to add different types of content. Writing — Producing markdown content for Hydejack. Scripts — How to include 3rd party scripts on your site. Build — How to build the static files for deployment. Advanced — Guides for more advanced tasks. Other LICENSE — The license of this project. NOTICE — Parts of this program are provided under separate licenses. CHANGELOG — Version history of Hydejack.",
    "tags": "",
    "url": "/docs/"
  },{
    "title": "About",
    "text": "이준호 MAJOR : Computaional Chemistry Sungkyunkwan University 2066, Seobu-ro, Jangan-gu, Suwon-si, Gyeonggi-do, Republic of Korea Personal Data mail: awer2072@gmail.com Github : https://github.com/junho1ee Education SungKyunKwan University (SKKU), Suwon Korea PhD student in Chemistry, (Mar.2014 ~ present) Advisor: Prof. Joonsuk Huh SungKyunKwan University (SKKU), Suwon Korea B.S. in Chemistry, (Mar.2014 ~ Feb.2018) Research Interest Computational Chemistry QM/MM Calculation Density Functional Theory Molecular Dynamics Machine Learning &amp; Deep Learning Protein Design Publications Lee, J.; Sung, D.; Chung, Y. K.; Song, S. B.; Huh, J., “Unveiling two-dimensional magnesium hydride for hydrogen storage material via generative adversarial network”, Nanoscale advances, 2022, 4, 2332–2338. Lee, J.; Song, S. B.; Chung, Y. K.; Jang, J. H.; Huh, J., “BoostSweet: Learning molecular perceptual representations of sweeteners” Food Chem 2022, 383, 132435. Lee, J.; Chung, Y. K.; Sung, D.; Jeong, B. J.; Oh, S.; Choi, J.-Y.; Huh, J., “Carrier mobility of one-dimensional vanadium selenide (V2Se9) monolayer and nanoribbon systems: DFT study.” Nanotechnology, 2022, 33 (13), 135703. Lee, J.; Kim, B. J.; Chung, Y. K.; Lee, W. G.; Choi, I. J.; Chae, S.; Oh, S.; Kim, J. M.; Choi, J. Y.; Huh, J., Raman scattering of true 1D van der Waals Nb2Se9 nanowires. J Raman Spectroscopy 2020, 51 (7), 1100-1107. More papers can be found on Google Scholar Personal Project Peptide binder design SE(3) Diffusion model을 기반한 Solubility-aware peptide binder design 프로젝트 수행",
    "tags": "",
    "url": "/about/"
  },{
    "title": "Advanced",
    "text": "This chapter covers advanced topics, such as offline support and custom JS builds. Codings skills are recommended. Enabling offline support How offline storage works Adding a custom social media icon Creating the icon font Adding the platform’s metadata How CSS is organized in Hydejack Enabling offline support Hydejack v8 introduces experimental “cache as you go” offline support. This is implemented via the Service Worker API, a new browser standard that is now supported in the latest versions of all major browsers. However, it is a very powerful feature and should be used with a lot of care. Enabling this feature requires that your content meets the following criteria: Content doesn’t change between deploys (e.g. manually adding things to _site etc.) All assets in assets are immutable, i.e. they never change (when changing a file in assets, it needs to have a new name and links need to point to the new file). The site is mostly self-contained, i.e. assets are served from the same domain (offline support will not download assets form external sites by default) The site is served via HTTPS (this is a Service Worker requirement) To enable this feature, create a sw.js file in the root of your project and add the following content: --- --- importScripts(\"{{ '/assets/js/sw.js' | relative_url }}?t={{ site.time | date_to_xmlschema }}\"); This will load the main service worker script from Hydejack’s assets. The site.time part is necessary to make the service worker “byte different” every time you create a new build of your site, which triggers an update. In your config.yml under the hydejack key, add the following: offline: enabled: true cache_version: 1 The current implementation does not cache resources from external domains. There is now way of knowing if external sites conform to the conditions mentioned above, hence caching can be problematic and result in unexpected behavior. For example, Google Analytics uses GET requests to send page views, each of which would be cached by the service worker without this policy. Frequently updating images, such as badges would never change. However, if you include resources that are hosted on another domain and don’t change, you can add the sw-cache query parameter to the URL, e.g. https://upload.wikimedia.org/wikipedia/commons/b/b1/57_Chevy_210.jpg?sw-cache This will cause them to be cached like resources from the assets folder. If you want to serve a file from the assets folder but NOT cache it for offline use, add the no-cache query parameter instead: /assets/lfs/download.bin?no-cache How offline storage works Hydejack’s custom service worker implementation stores files for offline use on three different levels: Shell The shell files are the core Hydejack files (CSS, JS) that only change between version updates. If you made changes to any of these after enabling offline support, you must force an update by bumping the cache_version number in the config file. Assets These are presumed to be immutable. In other words, every file is cached indefinitely. E.g.: If you want to update an image after enabling offline support, add the image under a different name and change the link in the content. Alternatively, you can bump the cache_version, but this will remove all other cached files from the asset cache. Content The content cache exploits the fact that your content can’t change between builds, so that it can be stored for offline use until you upload a new build. For now, the entire content cache is discarded every time you publish new content (future versions could cache them based on last modified dates). Other things to note are that the implementation will always cache the pages listed under legal, as well as the 404.html page, which will be shown when the user is offline. Adding a custom social media icon Hydejack includes a number of social media icons by default (in fact, everything that is provided by IcoMoon), but since the landscape is always changing, it is likely that a platform that is important to you will be missing at some point. You can add any platform by simply providing a complete URL. However, a fallback icon will be used. Creating the icon font In order to add a custom social media icon you have to use the IcoMoon App (free) to create a custom icon webfont. However, it is important that the generated font include all icons already in use by Hydejack. For this purpose, find the selection.json in assets/icomoon/selection.json and upload it to the app via “Import Icons”. Then, use the app to add your icon(s). Consult the IcoMoon docs for additional help. Once you’ve created and downloaded the icon font form IconMoon, replace the icomoon folder in assets in its entirety. Keep in mind that future updates of Hydejack will override this folder. Adding the platform’s metadata For the second step it is necessary to add the network’s metadata to _data/social.yml. An entry looks like: deviantart: name: DeviantArt icon: icon-deviantart prepend: \"https://\" append: \".deviantart.com\" name The name of the network. Used for the title attribute and screen readers. icon The icon CSS class. Can be chosen during the IcoMoon creation process. prepend Optional. A string that is prepended to the username to form the link to the profile. If the final URL should be https://&lt;username&gt;.deviantart.com, this would be https:// append Optional. A string that is appended to the username to form the link to the profile. If the final URL should be https://&lt;username&gt;.deviantart.com, this would be .deviantart.com. How CSS is organized in Hydejack Hydejack takes a quite unique approach to CSS, which is motivated by the ability to inline essential CSS rules in a style tag in the &lt;head/&gt; of a page (to increase the loading speed), while serving the rest in a separate file. The styles are written in SCSS and are located in the _sass folder, which looks like ├── hydejack │ ├── __inline__ │ ├── __link__ │ ├── _base.pre.scss │ ├── ... │ └── _social.pre.scss ├── pooleparty │ ├── __inline__ │ ├── __link__ │ ├── _base.pre.scss │ ├── ... │ └── _type.pre.scss ├── mixins.scss ├── my-inline.scss ├── my-style.scss ├── syntax.scss └── variables.scss The style rules are organized alongside components (or rather, topics) like “sidebar” and “footer”. Further, there are two separate frameworks, “pooleparty” and “hydejack”, which grew out of the original Poole and Hyde projects. Poole/party contains more general style rules, while Hyde/jack contains those that more are specific to the theme. However, this separation has blurred over time. Inside those folders, you will notice the __inline__ and __link__ folders. The unfriendly names are intentional, because their contents are generated by a script and shouldn’t be modified directly. The source files are located in the same folder and end with .pre.scss. They are fully valid SCSS files, but contain comments that mark which lines should be inlined and which should be fetched asynchronously. The rules are as follows: Every line between // &lt;&lt;&lt; inline and // &gt;&gt;&gt; will be inlined Every line between // &lt;&lt;&lt; link and // &gt;&gt;&gt; will be linked Every line that isn’t contained in a block and ends with // inline will be inlined Every line that isn’t contained in a block and ends with // link will be linked Every line for which none of the above applies will be included in both. The actual splitting happen with the .scripts/build-css.sh script (requires node.js 8+). You can run the script once by using $ npm run build:css or rebuild the CSS on every file change $ npm run watch:css Note that my-inline.scss and my-style.scss are not affected by this. Also, since all files are valid SCSS, the splitting part is entirely optional. If you would like to build just one regular CSS file, add hydejack: no_inline_css: true to your config file.",
    "tags": "",
    "url": "/docs/advanced/"
  },{
    "title": "Basics",
    "text": "This chapter covers the basics of content creation with Hydejack. Adding images Adding an entry to the sidebar Adding a link to an external page to the sidebar Adding a category or tag Recap: Categories and tags in Jekyll Categories and tags in Hydejack Creating a new category or tag Adding an about page Adding a cover page Adding related posts to a post Customization Adding custom CSS Adding custom HTML to the head Adding custom HTML to the body Adding a welcome page* Projects* Adding a projects page Adding a project Organizing Projects Adding a resume* Changing the layout Skill level icons Adding a specialized resume or multiple resumes Downloads Adding images Adding good images is key to a engaging blog experience. You can provide an image attribute in in the front matter of posts, pages, and projects* that will be used by Hydejack in a variety of ways, such as header image in the blog and post layout, social media previews, cards in the gird and projects layout*, thumbnails in the search dropdown*, etc. The image attribute will accept an URL to an image, but it is recommended that you provide a path / srcset hash instead, e.g. image: path: /assets/img/projects/hyde-v2.jpg srcset: 1920w: /assets/img/projects/hyde-v2.jpg 960w: /assets/img/projects/hyde-v2@0,5x.jpg 480w: /assets/img/projects/hyde-v2@0,25x.jpg Hydejack will show the image in various sizes depending on available screen width so that no specific size will fit all. Instead, I recommend using a mipmap-like approach, providing the image in multiple sizes, each image half the width of the previous one. Since Hydejack provides an appropriate sizes attribute, the browser can chose the best image from the provided source set. If you have ImageMagick installed, you can use the following commands to create images at 50%, 25%, and 12.5% of the original image. Other image tools will provide similar capabilities. convert your-image.jpg -resize 50% -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB your-image@0,5x.jpg convert your-image.jpg -resize 25% -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB your-image@0,25x.jpg convert your-image.jpg -resize 12.5% -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB your-image@0,125x.jpg Note that the keys in the srcset hash have to be valid “descriptors” (as defined here). In practice this means the width in pixels followed by w. The path key is a fallback image for browsers that don’t support the srcset attribute. It’s also used by jekyll-seo-tag for social media previews. For more information on srcset, see the documentation at MDN, or this article from CSS-Tricks. Adding an entry to the sidebar To add links to the sidebar, populate the menu entry in _config.yml with a list of title-url pairs, e.g.: # file: `_config.yml` menu: - title: Blog url: /blog/ - title: Projects url: /projects/ - title: Resume url: /resume/ - title: About url: /about/ Adding a link to an external page to the sidebar To add links to external sites, simply provide a fully qualified URL, e.g. menu: - title: \"@qwtel\" url: https://qwtel.com/ Adding a category or tag Hydejack allows you to use the list or grid* layout to show all posts of a particular category or tag. Before you start, make sure your config files contains the features_categories and featured_tags collections: # file: `_config.yml` collections: featured_categories: permalink: /:name/ output: true featured_tags: permalink: /tag-:name/ output: true Recap: Categories and tags in Jekyll Posts in Jekyll can belong to one or more categories, as well as one or more tags. They are defined in a post’s front matter: --- layout: post title: Welcome to Jekyll categories: [jekyll, update] tags: [jekyll, update] --- Posts can also be assigned to a category based on their position within the folder structure, e.g. ├── jekyll │ └── update │ └── _posts │ └── 2017-04-07-welcome-to-jekyll.markdown This will place “Welcome to Jekyll” in the categories jekyll and update. This is now the preferred way of assigning categories in Hydejack, as it makes URLs correspond more naturally to the underlying folder structure. Whether you use this method or not, categories will always be part of a posts URL, while tags will not. Type URL Categories /jekyll/update/2017-04-07-welcome-to-jekyll/ Tags /2017-04-07-welcome-to-jekyll/ As far as Jekyll is concerned, this is the only difference. Categories and tags in Hydejack Categories and tags are displayed by Hydejack below the title, after the date. Categories are displayed with the preposition “in”, while tags are displayed with the preposition “on”, e.g. Type Title Categories Welcome to Jekyll¬ 07 Apr 2017 in Jekyll / Update Tags Welcome to Jekyll¬ 07 Apr 2017 on Jekyll, Update Both Welcome to Jekyll¬ 07 Apr 2017 in Jekyll / Update on Jekyll, Update You can adjust these in _data/string.yml. Creating a new category or tag By default, categories and tags are rendered as plain text. Further steps are necessary if you want them to link to a page that contains a list of all posts that belong to that category or tag. For each featured category or tag, a file called &lt;category-name&gt;.md or &lt;tag-name&gt;.md has to be created inside the _featured_tags and _featured_categories folders, respectively. Each file in these folders is part of a Jekyll Collection. The meta data of a category or tag is set in the files front matter, e.g. # file: `_featured_categories/hyde.md` --- layout: list title: Hyde slug: hyde description: &gt; Hyde is a brazen two-column [Jekyll](http://jekyllrb.com) theme. It's based on [Poole](http://getpoole.com), the Jekyll butler. --- layout Must either list or grid* title Used as title of the page, as well as name of the category or tag as part of the line below a blog post’s title. Can be different from the name of the tag or category, as long as slug is identical to the name. slug Must be identical to the key used in the blog’s front matter, i.e. if you use categories: [jekyll] the slug must be jekyll. By default, the slug is derived from the title, but here it is recommended that you set it explicitly. description A medium-length description, used on the tag or category’s detail page and shown in a message box below the title. menu Set to to true if you want the category or tag to appear in the sidebar. For more information, see Adding an entry to the sidebar. Once the file is created, the page can be found at /category/&lt;categoryname&gt;/ or /tag/&lt;tagname&gt;/. Adding an about page About pages are a frequent use case, so Hydejack has a special layout for it. It is a slight modification of the page layout that allows showing the author information by adding the &lt;!--author--&gt; marker somewhere on the page. To create an about page, make sure layout is set to about. For more on authors, see Adding an author. &lt;!-- file: `about.md` --&gt; --- layout: about title: About --- Some content &lt;!--author--&gt; Adding a cover page Hydejack 8 introduces cover pages, i.e. pages witht he sidebar opened, so that it spans the entire screen. This feature is intended for landing pages. To enable it on a page, simply add cover: true to the front matter. # file: `index.md` --- layout: welcome title: Welcome cover: true #!! Add this --- Adding related posts to a post You can choose which posts will appear in the “Related Posts” section below a post by adding the related_posts key to the front matter of a post # file: `category/_posts/2020-02-01-some-post.md` --- layout: post related_posts: # Specify via the path in the file system - category/_posts/2020-01-01-other-post.md # Can also use the url of the post, # but this will break when changing the `permalink` setting! - /blog/category/2020-01-02-other-other-post/ --- Customization Adding custom CSS The quickest and safest way to add custom CSS to Hydejack is via the _sass/my-inline.scss and _sass/my-style.scss files (create the folder/the files if they don’t exist). To add CSS that gets inlined into the page, i.e. is loaded with the first request, put the CSS rules into my-inline.scss. This is intended for above-the-fold content. Otherwise put the CSS rules into my-style.scss. Note that this distinction has no effect when no_inline_css is enabled. Adding custom HTML to the head To add custom HTML elements to the &lt;head&gt; of the document, open _includes/my-head.html (create the folder/the files if they don’t exist) and add your elements there. Adding custom HTML to the body To add custom HTML elements to the &lt;body&gt; of the document, open _includes/my-body.html (create the folder/the files if they don’t exist) and add your elements there. What’s the difference to my-scripts.html? This file was used in earlier versions of Hydejack to accomplish the same goal. However, there are still instances were you might want to prefer my-scripts.html over my-body.html, as it won’t load scrips on redirect pages and will be ignored by browsers &lt; IE10. Adding a welcome page* If you bought the PRO version of Hydejack you have access to the welcome layout. It is intended to showcase your projects and blog posts in a compact way. Technically, it is a modified version of the about layout, so it allows showing the author information where the &lt;!--author--&gt; marker is put. Demo. You can create a welcome page by creating a new markdown file and setting the layout to welcome in the front matter. # file: `index.md` --- layout: welcome title: Welcome cover: true --- Without further configuration, the welcome page will just look like a regular page. However, it can be enhanced through the use of markers: To show the two most recent projects, add the &lt;!--projects--&gt; marker to the content To show the four most recent blog posts, add the &lt;!--posts--&gt; marker to the content (To show the five most recent blog posts in list form, add the &lt;!--posts_list--&gt; marker to the content) The welcome layout also supports selecting specific projects and posts, by adding to the front matter, e.g.: # file: `index.md` --- selected_projects: - _projects/hydejack-v6.md - /projects/hyde-v2/ projects_page: projects.md selected_posts: - _posts/2017-05-03-javascripten.md - /blog/2012-02-07-example-content/ posts_page: /blog/ featured: false --- selected_projects A list of paths to projects that should be featured in the &lt;!--projects--&gt; marker. Either provide paths relative to the main directory with no leading /, or URLs according to the schema defined in permalink. projects_page The path to the main projects page Either a path relative to the main directory with no leading ./, or a URL according to the schema defined in permalink. selected_posts A list of paths to blog posts that should be featured in the &lt;!--posts--&gt; or &lt;!--posts_list--&gt; marker. Either provide paths relative to the main directory with no leading /, or URLs according to the schema defined in permalink. posts_page The path to the main posts page. Either a path relative to the main directory with no leading ./, or a URL according to the schema defined in permalink. featured Optional. When true, project thumbnails will span the full width instead of half. This setting takes precedence over the featured value of individual projects, i.e. it will apply to the entire page. Projects* Adding a projects page The projects page will show all projects of a particular collection. First, you need to make sure that you have the projects collection defined in _config.yml: # file: `_config.yml` collections: projects: permalink: /projects/:path/ output: true Next, add a projects.md to in the root (you can adjust the name/location to match the permalink of the collection). This file has the projects layout (mind the “s” at the end) and should have a show_collection key, with the name of the collection as a value, e.g.: # file: `projects.md` --- layout: projects title: Projects* show_collection: projects featured: true --- layout Must be projects. title The title of the page. Note that this name is reused as part of each individual project page (for the link that directs back to the projects page). show_collection The name of the collection you want display on this page. Defaults to projects. See Organizing Projects for detail on how to handle multiple project collections. featured Optional. When true, project thumbnails will span the full width, instead of only half. This setting takes precedence over the featured value of individual projects, i.e. it will apply to the entire page. Adding a project Projects are organized using Jekyll Collections. Each project generates an entry on the projects layout (Demo) as well as its own detail page (Demo). Each project is defined by a file in the _projects directory. The project’s meta information is defined in the file’s front matter. You can also add markdown content. A project’s front matter should look like: # file: `_projects/hyde-v2.md` --- layout: project title: Hyde v2* date: 2 Jan 2014 image: path: /assets/img/projects/hyde-v2@0,25x.jpg srcset: 1920w: /assets/img/projects/hyde-v2.jpg 960w: /assets/img/projects/hyde-v2@0,5x.jpg 480w: /assets/img/projects/hyde-v2@0,25x.jpg caption: Hyde is a brazen two-column Jekyll theme. description: &gt; Hyde is a brazen two-column [Jekyll](http://jekyllrb.com) theme. It's based on [Poole](http://getpoole.com), the Jekyll butler. links: - title: Demo url: http://hyde.getpoole.com - title: Source url: https://github.com/poole/hyde featured: false --- layout Must be set to project date Providing a year is the minimum requirement. Used to sort the projects. image A 16:9 image of the project. See Adding images for details. caption A short description, shown as part of each “project card” in the projects layout. description A medium-length description, used on the project’s detail page as meta description and shown as message box below the image. links A list of title-url pairs that link to external resources related to this project. author Optional. The author shown below the project, similar to posts. featured Optional. When true, the project preview will span the full content width. You can use this for projects that should receive more attention. You can set/override this for an entire page, by setting featured in the front matter (applies to the projects and welcome layout). Organizing Projects If you want to organize your projects using categories or tags, similar to the way you do with posts, the best way is to achieve this is via multiple collections. Categories and tags are reserved for posts, and adding them to collections has no effect. The default config file comes with one projects collection predefined, but we can easily add additional collections like so: # file: `_config.yml` collections: # The default projects collection projects: permalink: /projects/:path/ output: true # Our new projects collection other_projects: # Make sure the permalink path is different! permalink: /other-projects/:path/ output: true Create a new folder in the top level directory that follows the naming convention _&lt;collection name&gt;. In our case the name is _other_projects. In it, create collection items as shown above. This is enough to render the project pages. To render them all on a single page, create a projects page as described above with the show_collection key set to our new collection, e.g.: # file: \"other-collection.md\" --- layout: projects title: Other Projects* show_collection: other_projects #!! --- Note that the file name matches the other-projects path in the permalink we’ve defined above. This is to ensure that the directories match up. Adding a resume* Hydejack’s PRO version features a generalized resume layout. Demo. It generates the resume page from a valid JSON Resume, which is good news if you already have a JSON resume. Otherwise, there are various ways of obtaining one: You can edit the example resume.yml in _data directly. It contains example entries for each type of entry. You can use the visual JSON Resume Editor. If you have a LinkedIn profile, you can try LinkedIn to Json Résumé. Once you have a JSON Resume, place it into _data. To render a resume page, create a new markdown file and set the layout to resume in the front matter: # file: `resume.md` --- layout: resume title: Resume description: &gt; A short description of the page for search engines (~150 characters long). hide_description: true --- You can download the final resume.json (minified) from the assets folder. When running locally, you can find it at _site/assets/resume.json. Changing the layout You can customize the layout of the resume by rearranging the entries in the left_column and right_columns keys in the front matter, e.g. # file: `resume.md` --- layout: resume left_column: - work - volunteer - education - awards - publications - references right_column: - languages - skills - interests --- Skill level icons By default, the layout will replace certain keywords with star icons. The keywords are as follows: Icon Skills Languages 3/3, Master, Expert, Senior, Professional 5/5, Native or bilingual proficiency, Native speaker   4/5, Full professional proficiency 2/3, Intermediate, Advanced, Amateur 3/5, Professional working proficiency   2/5, Limited working proficiency 1/3, Beginner, Novice, Junior 1/5, Elementary proficiency 0/3 0/5, No proficiency If a keyword is not recognized, the provided text will be spelled out instead. To disable icons and always spell out the text, set no_skill_icons and/or no_langauge_icons to true. # file: `resume.md` no_language_icons: true no_skill_icons: true Adding a specialized resume or multiple resumes You can add a specialized resume or multiple resumes by adding the resume YAML to the front matter under the resume key. E.g.: # file: `resume.md` --- layout: resume title: Resume description: &gt; A short description of the page for search engines (~150 characters long). resume: basics: name: \"Richard Hendricks\" label: \"Programmer\" picture: \"/assets/icons/icon.png\" # ... --- Downloads You can add buttons to let readers print or download your resume in various formats. Add the following to the front matter to add all 4 buttons: # file: \"resume.md\" buttons: print: true pdf: /assets/Resume.pdf vcf: http://h2vx.com/vcf/&lt;!--url--&gt; json: /assets/resume.json To remove a button remove the corresponding key from the hash. While the resume.json is can be generated by Jekyll itself, and the vCard can be generated by an external service, the PDF needs to be pre-generated by you. You can render a PDF from the resume page itself by using your browser’s “Print to PDF” feature (Chrome works best). For best results, check the following options in the print popup: Continue with Writing",
    "tags": "",
    "url": "/docs/basics/"
  },{
    "title": "Build",
    "text": "This chapters shows how to prepare your Hydejack site for a production build and deployment on 3rd party hosting providers. Building locally Building locally with latent semantic analysis GitHub Pages Building locally When building Hydejack it is important to set the environment variable JEKYLL_ENV to production. Otherwise the output will not be minified. Building itself happens via Jekyll’s build command. $ JEKYLL_ENV=production bundle exec jekyll build This will generate the finished static files in _site, which can be deployed using the methods outlined in the Jekyll Documentation. Building locally with latent semantic analysis By default, related posts are simply the most recent posts. Hydejack modifies this a bit, by showing the most recent posts of the same category or tag. However, the results are still pretty “unrelated”. To provide better results, Jekyll supports latent semantic analysis via classifier-reborn’s Latent Semantic Indexer To use the LSI, you first have to disable Hydejack’s default behavior, by setting use_lsi: true under the hydejack key in your config file. # file: `_config.yml` hydejack: use_lsi: true Then, you have to run jekyll build with the --lsi flag: $ JEKYLL_ENV=production bundle exec jekyll build --lsi Note that this may take a long time. Once it is finished, the generated static files will be located in the _site directory, which can be deployed using the methods outlined in the Jekyll Documentation. GitHub Pages If you’re using the Starter Kit for GitHub pages, all you have to do is push your repository: $ git add . $ git commit \"Update\" $ git push origin master",
    "tags": "",
    "url": "/docs/build/"
  },{
    "title": "Config",
    "text": "Once Jekyll is running, you can start with basic configuration by adding various entries to _config.yml. Besides the documentation here, you can also read the annotated config file. When making changes to _config.yml, it is necessary to restart the Jekyll process for changes to take effect. Setting url and baseurl GitHub Pages Changing accent colors and sidebar images Theme color Changing fonts Removing Google Fonts Choosing a blog layout Using the blog layout in a subdirectory Adding an author Adding an author’s picture Adding social media icons Adding an email, RSS icon or download icon Enabling comments Enabling Google Analytics Using a custom analytics provider Changing built-in strings Adding legal documents Enabling math blocks Adding custom Favicons and App Icons Changing the Favicon Changing the App Icons Adding a cookies banner* Enabling newsletter boxes* Enabling Dark Mode* Setting url and baseurl The first order of business should be to set the correct url and baseurl values in _config.yml. The url is the domain of your site, including the protocol (http or https). For this site, it is # file: `_config.yml` url: https://qwtel.com You don’t need to provide this property when hosting on GitHub Pages or Netlify. If your entire Jekyll blog is hosted in a subdirectory of your page, provide the path in baseurl with a leading /, but no trailing /, e.g. # file: `_config.yml` baseurl: /hydejack Otherwise, provide the empty string '' You don’t need to provide this property when hosting on GitHub Pages or Netlify. GitHub Pages When hosting on GitHub Pages the url is https://&lt;username&gt;.github.io (unless you are using a custom domain). The baseurl depends on the kind of page you are hosting. When hosting a user or organization page, use the empty string ''. When hosting project page, use /&lt;reponame&gt;. For for information on the types of pages you can host on GitHub, see the GitHub Help article. Changing accent colors and sidebar images Hydejack allows you to choose the background image of the sidebar, as well as the accent color (color of the links, selection and focus outline, etc…). # file: `_config.yml` accent_image: /assets/img/sidebar-bg.jpg accent_color: rgb(79,177,186) I recommend using a blurred image in order for the text to remain readable. If you save a blurred image as JPG, it will also drastically reduce its file size. The accent_image property also accepts the special value none which will remove the default image. If your sidebar image contains bright colors, the white text can be difficult to read. In this case, consider setting invert_sidebar: true in the front matter to invert the text colors in the sidebar. Use front matter defaults to enable this on all pages (see below). Note that these values can be overwritten on a per-page basis, i.e. you can create a unique look for each page. You can also apply a certain look to all posts in a category via front matter defaults, e.g.: # file: `_config.yml` defaults: - scope: path: hydejack/ values: accent_image: /assets/img/hydejack-bg.jpg accent_color: rgb(38,139,210) Theme color Hydejack also supports the theme_color property. When set, it will change the background color of the sidebar, as well as set the theme_color property in the Web App Manifest. In some browsers, such as Chrome on Android, this will change the color of the browser’s UI components. # file: `_config.yml` theme_color: rgb(25,55,71) Just like accent_* properties, the theme color can be overridden on a per-page basis by setting it in the front matter. Changing fonts Hydejack lets you configure the font of regular text and headlines, and it has built-in support for Google Fonts. There are three keys in _config.yml associated with this: font, font_heading and google_fonts. The defaults are: # file: `_config.yml` font: Noto Sans, Helvetica, Arial, sans-serif font_heading: Roboto Slab, Helvetica, Arial, sans-serif google_fonts: Roboto+Slab:700|Noto+Sans:400,400i,700,700i font and font_heading must be valid CSS font-family values. When using Google Fonts make sure to provide at least one fallback. The google_fonts key is the string necessary to fetch the fonts from Google. You can get it from the download page at Google Fonts after you’ve selected one or more fonts: Removing Google Fonts If you prefer not to use Google Fonts and remove all associated code from the site, set the google_fonts key to false. The no_google_fonts parameter has been removed in v9 and no longer has any effect. Choosing a blog layout Hydejack features three layouts for showing your blog posts. The list layout only shows the title and groups the posts by year of publication. The grid layout* is exclusive to the PRO Version and will show a content card (with image) for each post. The blog layout is a traditional paginated layout and shows the title and an excerpt of each post. In order to use the list or grid layout add the following front-matter to a new markdown file: --- layout: list # or `grid` title: Home --- If you want to use the blog layout, you need to add jekyll-paginate to your Gemfile and to the plugins list in your config file: # file: `Gemfile` gem \"jekyll-paginate\" # file: `_config.yml` plugins: - jekyll-paginate You also need to add the paginate and paginate_path keys to your config file, e.g. # file: `_config.yml` paginate: 10 paginate_path: '/:num/' The blog layout needs to be applied to a file with the .html file extension and the paginate_path needs to match the path to the index.html file. To match the paginate_path above, put a index.html with the following front matter in the root directory: # file: `index.html` --- layout: blog title: Blog --- For more information see Pagination. Using the blog layout in a subdirectory If you want to use the blog layout at a URL like /my-blog/, create the following folder structure: ├── my-blog │ └── index.html └── _config.yml You can use the same index.html as before and place it in the subdirectory. # file: `my-blog/index.html` --- layout: blog title: Blog --- In your config file, make sure the paginate_path matches the name of the subdirectory: # file: `_config.yml` paginate: 10 paginate_path: /my-blog/:num/ #!! To add an entry in the sidebar to your blog directory, see Adding an entry to the sidebar. Adding an author At a bare minimum, you should add an author key with a name and email sub-key (used by the feed plugin) to to your config file: # file: `_config.yml` author: name: Florian Klampfer email: mail@qwtel.com If you would like the author to be displayed in the about section below a post or project*, add an about key and provide markdown content. I recommend using the YAML pipe | syntax, so you can include multiple paragraphs: # file: `_config.yml` author: name: Florian Klampfer email: mail@qwtel.com about: | Hi, I'm Florian or @qwtel... This is another paragraph. Adding an author’s picture If you’d like for the author’s picture to appear in addition the about text (see above), you can either use the jekyll-avatar plugin or provide URLs to images manually. To use the plugin, add it to your Gemfile and the list of plugins in your config file: # file: `Gemfile` gem \"jekyll-avatar\" # file: `_config.yml` plugins: - jekyll-avatar Run bundle install for the changes to take effect. Make sure you have provided a GitHub username in your config file (github_username), or to the author key (author.social.github, author.github.username, or author.github). See Adding social media icons for more. To set an image manually, you have to provide an URL to the author’s picture key: # file: `_config.yml` author: picture: /assets/img/me.jpg If you’d like to provide multiple versions for screens with different pixel densities, you can provide path and srcset keys instead: # file: `_config.yml` author: picture: path: /assets/img/me.jpg srcset: 1x: /assets/img/me.jpg 2x: /assets/img/me@2x.jpg The keys of the srcset hash will be used as image descriptors. For more information on srcset, see the documentation at MDN, or this article from CSS-Tricks. Adding social media icons Hydejack supports a variety of social media icons out of the box. These are defined on a per-author basis, so make sure you’ve followed the steps in Adding an author. If you are using the gem-based version of Hydejack, download social.yml and put it into _data in the root directory. This is necessary because gem-based themes do not support including _data. You can add a link to a social network by adding an entry to the social key in to an author. It consists of the name of the social network as key and your username within that network as value, e.g. # file: `_config.yml` author: social: twitter: qwtel github: qwtel Check out authors.yml to see which networks are available. You can also follow the steps here to add your own social media icons. You can change the order in which the icons appear by moving lines up or down, e.g. # file: `_config.yml` author: social: github: qwtel # now github appears first twitter: qwtel To get an overview of which networks are available and how a typical username in that network looks like, see the included authors.yml. Should providing a username not produce a correct link for some reason, you can provide a complete URL instead, e.g. # file: `_config.yml` author: social: youtube: https://www.youtube.com/channel/UCu0PYX_kVANdmgIZ4bw6_kA You can add any platform, even if it’s not defined in social.yml, by providing a complete URL. However, a fallback icon will be used when no icon is available. Supplying your own icons is an advanced topic. Adding an email, RSS icon or download icon If you’d like to add an email , RSS , or download icon to the list, add the email, rss, or download key, e.g.: # file: `_config.yml` author: social: email: mail@qwtel.com rss: http://localhost:4000/feed.xml # make sure you provide an absolute URL download: https://github.com/hydecorp/hydejack/archive/v9.1.6.zip Enabling comments Hydejack supports comments via Disqus. Before you can add comments to a page you need to register and add your site to Disqus’ admin console. Once you have obtained your “Disqus shortname”, you include it in your config file: # file: `_config.yml` disqus: &lt;disqus shortname&gt; Now comments can be enabled by adding comments: true to the front matter. --- layout: post title: Hello World comments: true --- You can enable comments for entire classes of pages by using front matter defaults. E.g. to enable comments on all posts, add to your config file: # file: `_config.yml` defaults: - scope: type: posts values: comments: true Enabling Google Analytics Enabling Google Analytics is as simple as setting the google_analytics key. # file: `_config.yml` google_analytics: UA-XXXXXXXX-X To remove Google Analytics and all associated code from the site, set the google_analytics key to false. Using a custom analytics provider If you want to use a different analytics provider such as Matomo, you can add its code snippet to _includes/my-body.html (create if it doesn’t exist). The default file contains an example. Changing built-in strings You can change the wording of built-in strings like “Related Posts” or “Read more” in _data/strings.yml. If you are using the gem-based version the file doesn’t exist, but you can get the default file here. You will frequently find markers like &lt;!--post_title--&gt;. You can place them freely within your string and they will be replaced with the content they refer to. You may also use this feature to translate the theme into different languages. In this case you should also set the lang key to your config file, e.g. # file: `_config.yml` lang: cc-ll where cc is the 2-letter country code and ll specifies a 2-letter location code, e.g.: de-at. You may also change the strings used for formatting dates and times (look out for the date_formats key), but be aware that the values you provide need to be valid Ruby format directives. Adding legal documents If you have pages for contact data, privacy policy, cookie policy, etc. you can add links to them in the footer by listing them under the legal key in your config file as follows: # file: `_config.yml` legal: - title: Impress url: /impress/ - title: Cookies Policy url: /cookies-policy/ When using Hydejack’s offline feature, the pages listed here will be downloaded and cached when loading the page for the first time. Enabling math blocks Hydejack supports math blocks with either KaTeX or MathJax. The MathJax implementation comes with a client-side runtime and works on GitHub Pages. It is the more heavy-weight of the two and doesn’t work without JavaScript enabled. Due to the size of the complete MathJax package, it only works partially with offline support enabled. The KaTeX implementation pre-renders the KaTeX output during site building. It’s more lightweight because it does not ship a client-side runtime and therefore works without JavaScript. In my opinion, it is the more elegant solution, but it requires a JavaScript runtime on the machine that builds the site, i.e. it does not work on GitHub Pages. You can switch between the two implementations by changing the kramdown.math_engine key to either katex or mathjax in your config file. # file: `_config.yml` kramdown: math_engine: katex math_engine_opts: {} The KaTeX implementation also requires the kramdown-math-katex gem in your Gemfile. If you intend to use MathJax instead, this step is not required. # file: `Gemfile` gem \"kramdown-math-katex\" There are a couple of things to know about this gem: It is not supported on GitHub Pages. You have to build the site on your machine before uploading to GitHub, or use a more permissive cloud building tool such as Netlify. You need some kind of JavaScript runtime on your machine. Usually installing NodeJS will suffice. Alternatively, adding gem \"duktape\" will also do. For more, see https://github.com/kramdown/math-katex#documentation Before you add math content, remember to run bundle install and restart Jekyll. Adding custom Favicons and App Icons Changing the Favicon By default, Hydejack will use the Favicon from /assets/icons/favicon.ico and Apple Touch Icon from /assets/icons/icon-192x192.png. You can either override these files, or override the path in the config file via favicon and app_touch_icon keys: # file: \"_config.yml\" favicon: /favicon.ico apple_touch_icon: /assets/img/logo.png Changing the App Icons By default, Hydejack includes its own favicon, as well as app icons in 8 different resolutions. Name Resolution icon-512x512.png 512x512 icon-384x384.png 384x384 icon-192x192.png 192x192 icon-152x152.png 152x152 icon-144x144.png 144x144 icon-128x128.png 128x128 icon-96x96.png 96x96 icon-72x72.png 72x72 To change the default icons you have to replce all of them. To make this manageable, I recommend using the following tools: First, use the Maskable.app Editor to confine your logo/picture to the “minimum safe area”. More on maskable app icons, see this article on web.dev. Make sure the base image is at least 512x512 pixels in size. Then use the Web App Manifest Generator to automatically resize the icons. Upload the icon downloaded from Maskable.app and then click “Generate .zip”. In the zip, ignore the manifest.json and look for the icons folder. Copy it into the assets folder of your site. To change the favicon, place your own favicon.ico (32x32, PNG) into assets/icons. Adding a cookies banner* # file: `_config.yml` hydejack: cookies_banner: true Enabling this setting will show a notice at the top of the page to new visitors. You can change the wording of the notice in _data/strings.yml with the cookies_banner.text and cookies_banner.okay keys: # file: `_data/strings.yml` cookies_banner: text: This site uses cookies. [Markdown allowed](/cookies-policy/)! okay: Okay Enabling newsletter boxes* To enable showing newsletter subscription boxes below each post and project, provide your Tinyletter username to the tinyletter key in the config file. # file: `_config.yml` tinyletter: &lt;tinyletter username&gt; To edit the content of the newsletter box, open _data/strings.yml, and change the entries under the tinyletter key. If want to use a different mailing provider you can build your own form, and insert it into _includes/my-newsletter.html. The file includes an example form for MailChimp, where you need to fill in site.mailchimp.action and site.mailchimp.hidden_input (you can get these from MailChimp). To build a completely new from, you can use the same CSS classes as Bootstrap. Note that only form, grid and utility classes are available. Check out Forms by Example for more examples. Enabling Dark Mode* Buyers of the PRO version have access to a dark-themed version of Hydejack. Dark mode can be enabled in config.yml under the hydejack key and has three settings and two adjustments: # file: `_config.yml` hydejack: dark_mode: dynamic: true sunrise: 6 sunset: 18 icon: true always: false Setting dynamic, will enable dark mode based on the client’s local time (unlike location-based sunset calculations, this approach does not require a permission form the user). You can adjust sunrise and sunset to change when to show the light/dark theme. Setting icon will show a switch to alternate between the light and dark mode at the top of the page. Finally, setting always will cause dark mode to become the default theme at all times (combine with dynamic: false). Continue with Basics",
    "tags": "",
    "url": "/docs/config/"
  },{
    "title": "Welcome",
    "text": "",
    "tags": "",
    "url": "/index_old/"
  },{
    "title": "Install",
    "text": "How you install Hydejack depends on whether you start a new site, or change the theme of an existing site. New sites Existing sites Troubleshooting GitHub Pages Running locally New sites For new sites, the best way to get started with Hydejack is via the Starter Kit. It comes with a documented config file and example content that gets you started quickly. If you have a GitHub account, fork the Hydejack Starter Kit repository. Otherwise download the Starter Kit and unzip them somewhere on your machine. If you bought the PRO Version of Hydejack, use the contents of the starter-kit folder instead. In addition to the docs here, you can follow the quick start guide in the Starter Kit. You can now jump to running locally. You can now also directly. Existing sites If you have an existing site that you’d like to upgrade to Hydejack you can install the theme via bundler. Add the following to your Gemfile: # file: `Gemfile` gem \"jekyll-theme-hydejack\" If you bought the PRO Version of Hydejack, copy the #jekyll-theme-hydejack folder into the root folder of your site, and add the following to your Gemfile instead: # file: `Gemfile` gem \"jekyll-theme-hydejack\", path: \"./#jekyll-theme-hydejack\" The folder is prefixed with a # to indicate that this folder is different from regular Jekyll content. The # char was choosen specifically because it is on of the four characters ignored by Jekyll by default (., _ , #, ~). In your config file, change the theme to Hydejack: # file: `_config.yml` theme: jekyll-theme-hydejack Hydejack comes with a default configuration file that takes care most of the configuration, but it pays off to check out the example config file in the Starter Kit to see what’s available. You can now jump to running locally. Troubleshooting If your existing site combines theme files with your content (as did previous verisons of Hydejack/PRO), make sure to delete the following folders: _layouts _includes _sass assets The assets folder most likely includes theme files as well as your personal/content files. Make sure to only delete files that belong to the old theme! GitHub Pages If you want to build your site on GitHub Pages, check out the gh-pages branch in the Hydejack Starter Kit repo. For existing sites, you can instead set the remote_theme key as follows: # file: `_config.yml` remote_theme: hydecorp/hydejack@v9.1.6 Make sure the plugins list contains jekyll-include-cache (create if it doesn’t exist): # file: `_config.yml` plugins: - jekyll-include-cache To run this configuration locally, make sure the following is part of your Gemfile: # file: `Gemfile` gem \"github-pages\", group: :jekyll_plugins gem \"jekyll-include-cache\", group: :jekyll_plugins Note that Hydejack has a reduced feature set when built on GitHub Pages. Specifically, using KaTeX math formulas doesn’t work when built in this way. Running locally Make sure you’ve cded into the directory where _config.yml is located. Before running for the first time, dependencies need to be fetched from RubyGems: $ bundle install If you are missing the bundle command, you can install Bundler by running gem install bundler. Now you can run Jekyll on your local machine: $ bundle exec jekyll serve and point your browser to http://localhost:4000 to see Hydejack in action. Continue with Config",
    "tags": "",
    "url": "/docs/install/"
  },{
    "title": "Migration",
    "text": "This documents shows how to upgrade Hydejack from previous versions (v5) in a step-by-step manner. Unfortunately, upgrading form v5 and earlier is not straightforward. A lot of patterns and names have changed, motivated by a variety of reasons, including better integration with the rest of the Jekyll ecosystem and simplified workflows enabled by Jekyll Collections. From v5 Updating the folder structure Updating the configuration Restoring the tags Restoring the sidebar entries Restoring the RSS feed Restoring the comments Restoring the about page From v5 Updating the folder structure Copy the following folders and files from Hydejack v6 into your existing repository. Make sure you merge the folder contents. _data/ _includes/ _layouts/ _sass/ assets/ index.html (index.md*) Gemfile Gemfile.lock Note that the public folder has been renamed to assets. You’ll want to move your static assets there. Updating the configuration _config.yml has changed considerably. Open it and make the following changes. Rename the following keys font_accent =&gt; font_heading load_google_fonts =&gt; google_fonts google_analytics_id =&gt; google_analytics Enable Jekyll Collections for categories and tags by adding collections: featured_categories: permalink: /category/:name/ output: true featured_tags: permalink: /tag/:name/ output: true Delete photo and photo2x form the author key and add a picture hash instead that looks like picture: path: &lt;photo&gt; srcset: 1x: &lt;photo&gt; 2x: &lt;photo2x&gt; If you have only one photo, you can just provide the URL directly, e.g. picture: &lt;url&gt;. For more information, see Adding an author. Rename gems to plugins and make sure the list contains jekyll-seo-tag. plugins: - jekyll-seo-tag When making changes to _config.yml, it is necessary to restart the Jekyll process for the changes to take effect. Restoring the tags Delete the tag folder. Create a top-level folder called _featured_tags. For each entry in _data/tags.yml, create a markdown file in _features_tags with the name of the tag as filename, e.g. hyde.md for tag “hyde”. For each tag, copy its contents from _data/tags.yml into the new file’s front matter, e.g. --- layout: list name: Hyde description: &gt; Hyde is a brazen two-column Jekyll theme... accent_image: /hydejack/public/img/hyde.jpg accent_color: '#949667' --- Be aware that image has been renamed to accent_image and color has been renamed to accent_color. Add layout: list to the front matter. Once you’ve copied all tags into their own files, delete _data/tags.yml. Restoring the sidebar entries Hydejack can now link to any kind of page in the sidebar. Delete sidebar_tags in _config.yml. Open a file who’s page you would like to add to the sidebar. If you want to add a tag, open _featured_tags/&lt;tagname&gt;.md. Add menu: true to its front matter. (Optional) Set order: &lt;number&gt;, where &lt;number&gt; is the number at which you would like the link to appear. Restoring the RSS feed The feed is now provided by the jekyll-feed plugin instead of a custom solution. Delete atom.xml Add - jekyll-feed to gems in _config.yml, e.g. gems: - jekyll-seo-tag - jekyll-feed (Optional) Add the following to _config.yml to make the feed appear at the same URL as the old atom.xml. feed: path: atom.xml Restoring the comments The way comments are enabled has changed slightly. You now have to enable them per page by adding comments: true to the front matter (this is what the Disqus integration guide suggests). To enable them for all posts, add to the config file defaults: - scope: type: posts values: comments: true Restoring the about page Hydejack now has a dedicated layout for about pages. To use it, open about.md and change the layout in the front matter to about and delete {% include about-short.html author=site.author %}.",
    "tags": "",
    "url": "/docs/migration/"
  },{
    "title": "Posts",
    "text": "",
    "tags": "",
    "url": "/posts/"
  },{
    "title": "Scripts",
    "text": "There are two ways of adding third party scripts. Embedding is ideal for one-off scripts, e.g. widgets.js that is part of embedded tweets (see below). Adding global scripts is for scripts that should be loaded on every page. Embedding Global scripts Registering push state event listeners If everything else fails Embedding Hydejack supports embedding third party scripts directly inside markdown content. This will work in most cases, except when a script can not be loaded on a page more than once (this will occur when a user navigates to the same page twice). Example: &lt;script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"&gt;&lt;/script&gt; &lt;blockquote class=\"twitter-tweet\" data-lang=\"en\"&gt; &lt;p lang=\"en\" dir=\"ltr\"&gt; The next version of Hydejack (v6.3.0) will allow embedding 3rd party scripts, like the one that comes with this tweet for example. &lt;/p&gt; &amp;mdash; Florian Klampfer (@qwtel) &lt;a href=\"https://twitter.com/qwtel/status/871098943505039362\"&gt;June 3, 2017&lt;/a&gt; &lt;/blockquote&gt; The next version of Hydejack (v6.3.0) will allow embedding 3rd party scripts, like the one that comes with this tweet for example.&mdash; Florian Klampfer (@qwtel) June 3, 2017 Global scripts If you have scripts that should be included on every page you can add them globally by opening (or creating) _includes/my-scripts.html and adding them like you normally would: &lt;!-- file: `_includes/my-scripts.html` --&gt; &lt;script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha256-k2WSCIexGzOj3Euiig+TlR8gA0EmPjuc79OEeY5L45g=\" crossorigin=\"anonymous\"&gt;&lt;/script&gt; my-scripts.html will be included at the end of the body tag. Registering push state event listeners When embedding scripts globally you might want to run some init code after each page load. However, the problem with push state-based page loads is that the load event won’t fire again. Luckily, Hydejack’s push state component exposes an event that you can listen to instead. &lt;!-- file: `_includes/my-scripts.html` --&gt; &lt;script&gt; document.getElementById('_pushState').addEventListener('hy-push-state-load', function() { // &lt;your init code&gt; }); &lt;/script&gt; Note that the above code must only run once, so include it in your my-scripts.html. hy-push-state-start Occurs after clicking a link. hy-push-state-ready Animation fished and response has been parsed, ready to swap out the content. hy-push-state-after The old content has been replaced with the new content. hy-push-state-progress Special case when animation is finished, but no response from server has arrived yet. This is when the loading spinner will appear. hy-push-state-load All embedded script tags have been inserted into the document and have finished loading. If everything else fails If you can’t make an external script work with Hydejack’s push state approach to page loading, you can disable push state by adding to your config file: # file: `_config.yml` hydejack: no_push_state: true Continue with Build",
    "tags": "",
    "url": "/docs/scripts/"
  },{
    "title": "Upgrade",
    "text": "This chapter shows how to upgrade Hydejack to a newer version. The method depends on how you've installed Hydejack. 0. this unordered seed list will be replaced by toc as unordered list {:toc} Before upgrading to v7+, make sure you've read the [CHANGELOG](/CHANGELOG/){:.heading.flip-title}, especially the part about the [license change](/CHANGELOG/#license-change)! {:.note} ## Free version Upgrading the free version of the theme is as easy as running ```bash bundle update jekyll-theme-hydejack ``` ## PRO Version In v9, the structure of Hydejack PRO sites has changed. If you're looking to upgrade from v8 or earlier, check out [Installation for existing sites](/docs/install/#existing-sites) instead. {:.note} Buyers of the PRO version will find the files necessary for an upgrade in the `#jekyll-theme-hydejack` folder of the downloaded zip archive. To upgrade, simply overwrite the existing theme folder in the root directory of your site with the new one, then run ```bash bundle update jekyll-theme-hydejack ``` If you've modified any of Hydejack's files in `#jekyll-theme-hydejack`, your changes will most likely be overwritten and you have to apply them again. Make sure you've made a backup before overwriting any files. {:.note} ## GitHub Pages When building on GitHub Pages, upgrading Hydejack is as simple as setting the `remote_theme` key in `_config.yml` to the desired version. ```yml remote_theme: hydecorp/hydejack@v9.1.6 ``` To use the latest version on the `v9` branch on each build, you can use `hydecorp/hydejack@v9`. Continue with [Config](/docs/config/){:.heading.flip-title} {:.read-more}",
    "tags": "",
    "url": "/docs/upgrade/"
  },{
    "title": "Writing",
    "text": "Hydejack offers a few additional features to markup your content. Don't worry, these are merely CSS classes added with kramdown's `{:...}` syntax, so that your content remains compatible with other Jekyll themes. 1. this list will be replaced by the table of contents {:toc} For an introduction to markdown in general, see [Mastering Markdown][mm] and [kramdown Syntax][ksyn]. {:.note} ## A word on building speeds If building speeds are a problem, try using the `--incremental` flag, e.g. bundle exec jekyll serve --incremental From the [Jekyll docs](https://jekyllrb.com/docs/configuration/#build-command-options) (emphasis mine): > Enable the experimental incremental build feature. Incremental build only re-builds posts and pages that have changed, resulting in significant performance improvements for large sites, *but may also break site generation in certain cases*. The breakage occurs when you create new files or change filenames. Also, changing the title, category, tags, etc. of a page or post will not be reflected in pages other then the page or post itself. This makes it ideal for writing new posts and previewing changes, but not setting up new content. ## Adding a table of contents You can add a generated table of contents to any page by adding `{:toc}` below a list. Markdown: ~~~md * this unordered seed list will be replaced by the toc {:toc} ~~~ You can also create your table of contents as an ordered list (note the `1.` instead of `*`): ~~~md 1. this ordered seed list will be replaced by the toc {:toc} ~~~ The width of the display has to be larger than 1665px for the ToC to become sticky. Otherwise, the ToC will appear where the seed list is placed in the document. To show the table of contents only on large displays (> 1665px) use the following: ~~~md * this unordered seed list will be replaced by the toc {:toc .large-only} ~~~ A sticky table of contents will reduce the amount of space freed up by the `no_break_layout: false` setting. This is necessary to ensure large code blocks or tables don't overlap with the ToC. {:.note} ## Adding notes You can add a note by adding the `note` class to a paragraph. Example: You can add a note. {:.note} Markdown: ~~~markdown You can add a note. {:.note} ~~~ Edit the `note` key in `_data/strings.yml` to change the wording of the default label. To add a note with a specific label, add a `title` attribute: ~~~markdown A custom label. {:.note title=\"Attention\"} ~~~ A custom label. {:.note title=\"Attention\"} ## Adding large text You can add large text by adding the `lead` class to the paragraph. Example: You can add large text. {:.lead} Markdown: ~~~markdown You can add large text. {:.lead} ~~~ ## Adding large images You can make an image span the full width by adding the `lead` class. Example: ![Full-width image](https://via.placeholder.com/800x100){:.lead width=\"800\" height=\"100\" loading=\"lazy\"} Markdown: ~~~markdown ![Full-width image](https://via.placeholder.com/800x100){:.lead width=\"800\" height=\"100\" loading=\"lazy\"} ~~~ It is recommended to provide the dimension of the image via the `width` and `height` attributes, so that browsers can calculate the layout before the images are loaded. Combining this with the `loading=\"lazy\"` attribute allows modern browsers to load the images just-in-time as the users scrolls. Previous versions of Hydejack shipped with a custom JavaScript-based lazy loading solution, but it has been removed in v9 in favor of this more standards-based approach. {:.note} ## Adding image captions You can add captions to large images by adding the `figcaption` class to the paragraph after the image: ![Full-width image](https://via.placeholder.com/800x100){:.lead width=\"800\" height=\"100\" loading=\"lazy\"} An optional caption for an image. {:.figcaption} Markdown: ~~~md ![Full-width image](https://via.placeholder.com/800x100){:.lead width=\"800\" height=\"100\" loading=\"lazy\"} A caption for an image. {:.figcaption} ~~~ ## Adding large quotes You can make a quote \"pop out\" by adding the `lead` class. Example: > You can make a quote \"pop out\". {:.lead} Markdown: ~~~ > You can make a quote \"pop out\". {:.lead} ~~~ ## Adding faded text You can gray out text by adding the `faded` class. Use this sparingly and for information that is not essential, as it is more difficult to read. Example: I'm faded, faded, faded. {:.faded} Markdown: ~~~md I'm faded, faded, faded. {:.faded} ~~~ ## Adding tables Adding tables is straightforward and works just as described in the [kramdown docs][ksyntab], e.g. | Default aligned |Left aligned| Center aligned | Right aligned | |-----------------|:-----------|:---------------:|---------------:| | First body part |Second cell | Third cell | fourth cell | Markdown: ~~~md | Default aligned |Left aligned| Center aligned | Right aligned | |-----------------|:-----------|:---------------:|---------------:| | First body part |Second cell | Third cell | fourth cell | ~~~ However, it gets tricker when adding large tables. In this case, Hydejack will break the layout and grant the table the entire available screen width to the right: | Default aligned |Left aligned| Center aligned | Right aligned | Default aligned |Left aligned| Center aligned | Right aligned | Default aligned |Left aligned| Center aligned | Right aligned | Default aligned |Left aligned| Center aligned | Right aligned | |-----------------|:-----------|:---------------:|---------------:|-----------------|:-----------|:---------------:|---------------:|-----------------|:-----------|:---------------:|---------------:|-----------------|:-----------|:---------------:|---------------:| | First body part |Second cell | Third cell | fourth cell | First body part |Second cell | Third cell | fourth cell | First body part |Second cell | Third cell | fourth cell | First body part |Second cell | Third cell | fourth cell | | Second line |foo | **strong** | baz | Second line |foo | **strong** | baz | Second line |foo | **strong** | baz | Second line |foo | **strong** | baz | | Third line |quux | baz | bar | Third line |quux | baz | bar | Third line |quux | baz | bar | Third line |quux | baz | bar | | Second body | | | | Second body | | | | Second body | | | | Second body | | | | | 2 line | | | | 2 line | | | | 2 line | | | | 2 line | | | | |=================|============|=================|================|=================|============|=================|================|=================|============|=================|================|=================|============|=================|================| | Footer row | | | | Footer row | | | | Footer row | | | | Footer row | | | | {:.smaller} Tables adopts to the font size! You can decrease the size of the table by adding the `smaller` CSS class. Put `{:.smaller}` below the Markdown table, or add `class=\"smaller\"` to a HTML table. {:.note} ### Scroll table If the extra space still isn't enough, the table will receive a scrollbar. It is browser default behavior to break the lines inside table cells to fit the content on the screen. By adding the `scroll-table` class on a table, the behavior is changed to never break lines inside cells, e.g: | Default aligned |Left aligned| Center aligned | Right aligned | Default aligned |Left aligned| Center aligned | Right aligned | Default aligned |Left aligned| Center aligned | Right aligned | Default aligned |Left aligned| Center aligned | Right aligned | |-----------------|:-----------|:---------------:|---------------:|-----------------|:-----------|:---------------:|---------------:|-----------------|:-----------|:---------------:|---------------:|-----------------|:-----------|:---------------:|---------------:| | First body part |Second cell | Third cell | fourth cell | First body part |Second cell | Third cell | fourth cell | First body part |Second cell | Third cell | fourth cell | First body part |Second cell | Third cell | fourth cell | | Second line |foo | **strong** | baz | Second line |foo | **strong** | baz | Second line |foo | **strong** | baz | Second line |foo | **strong** | baz | | Third line |quux | baz | bar | Third line |quux | baz | bar | Third line |quux | baz | bar | Third line |quux | baz | bar | | Second body | | | | Second body | | | | Second body | | | | Second body | | | | | 2 line | | | | 2 line | | | | 2 line | | | | 2 line | | | | |=================|============|=================|================|=================|============|=================|================|=================|============|=================|================|=================|============|=================|================| | Footer row | | | | Footer row | | | | Footer row | | | | Footer row | | | | {:.smaller.scroll-table} You can add the `scroll-table` class to a markdown table by putting `{:.scroll-table}` in line directly below the table. To add the class to a HTML table, add the it to the `class` attribute of the `table` tag, e.g. ``. ### Small tables If a table is small enough to fit the screen even on small screens, you can add the `stretch-table` class to force a table to use the entire available content width. Note that stretched tables can no longer be scrolled. | Default aligned |Left aligned| Center aligned | Right aligned | |-----------------|:-----------|:---------------:|---------------:| | First body part |Second cell | Third cell | fourth cell | {:.stretch-table} An optional caption for a table {:.figcaption} You can add the `stretch-table` class to a markdown table by putting `{:.stretch-table}` in line directly below the table. To add the class to a HTML table, add the it to the `class` attribute of the `table` tag, e.g. ``. Just like images, you can add captions to tables by adding the `figcaption` class to the paragraph after the table. ~~~md An optional caption for a table {:.figcaption} ~~~ ## Adding code blocks To add a code block without syntax highlighting, simply indent 4 spaces (regular markdown). For code blocks with code highlighting, use `~~~`. This syntax is also supported by GitHub. For more information and a list of supported languages, see [Rouge](http://rouge.jneen.net/). You can give each code block a filename, by making the first line in the block a comment of the form `File: \"dir/filename.ext\"`. Use either single quotes `'`, double quotes `\"`, or backticks ` to surround the filename. Example: ~~~js // file: \"code-block.js\" // Example can be run directly in your JavaScript console // Create a function that takes two arguments and returns the sum of those // arguments var adder = new Function(\"a\", \"b\", \"return a + b\"); // Call the function adder(2, 6); // > 8 ~~~ An optional caption for a code block {:.figcaption} Markdown: ~~~js // file: \"code-block.js\" // Example can be run directly in your JavaScript console // Create a function that takes two arguments and returns the sum of those // arguments var adder = new Function(\"a\", \"b\", \"return a + b\"); // Call the function adder(2, 6); // > 8 ~~~ An optional caption for a code block {:.figcaption} DO NOT use Jekyll's `{ % highlight % } ... { % endhighlight % }` syntax, especially together with the `linenos` option. The generated `table` to render the line numbers does not have a CSS class or any other way of differentiating it from regular tables, so that the styles above apply, resulting in a broken page. What's more, the output from `highlight` tags isn't even valid HTML, nesting `pre` tags inside `pre` tags, which will in break the site during minification. You can read more about it [here](https://github.com/penibelst/jekyll-compress-html/issues/71) and [here](https://github.com/jekyll/jekyll/issues/4432). {:.note} ## Adding math Before adding math blocks, make sure you've [set up math support](/docs/config/#enabling-math-blocks). ### Inline Example: Lorem ipsum $$ f(x) = x^2 $$. Markdown: ~~~md Lorem ipsum $$ f(x) = x^2 $$. ~~~ ### Block Example: $$ \\begin{aligned} \\phi(x,y) &= \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) \\\\[2em] &= \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j) \\\\[2em] &= (x_1, \\ldots, x_n) \\left(\\begin{array}{ccc} \\phi(e_1, e_1) & \\cdots & \\phi(e_1, e_n) \\\\ \\vdots & \\ddots & \\vdots \\\\ \\phi(e_n, e_1) & \\cdots & \\phi(e_n, e_n) \\end{array}\\right) \\left(\\begin{array}{c} y_1 \\\\ \\vdots \\\\ y_n \\end{array}\\right) \\end{aligned} $$ An optional caption for a math block {:.figcaption} Markdown: ~~~latex $$ \\begin{aligned} %!!15 \\phi(x,y) &= \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right) \\\\[2em] &= \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j) \\\\[2em] &= (x_1, \\ldots, x_n) \\left(\\begin{array}{ccc} \\phi(e_1, e_1) & \\cdots & \\phi(e_1, e_n) \\\\ \\vdots & \\ddots & \\vdots \\\\ \\phi(e_n, e_1) & \\cdots & \\phi(e_n, e_n) \\end{array}\\right) \\left(\\begin{array}{c} y_1 \\\\ \\vdots \\\\ y_n \\end{array}\\right) \\end{aligned} $$ An optional caption for a math block {:.figcaption} ~~~ KaTeX does not support the `align` and `align*` environments. Instead, `aligned` should be used, e.g. `\\begin{aligned} ... \\end{aligned}`. {:.note} Continue with [Scripts](/docs/scripts/){:.heading.flip-title} {:.read-more} [mm]: https://guides.github.com/features/mastering-markdown/ [ksyn]: https://kramdown.gettalong.org/syntax.html [ksyntab]:https://kramdown.gettalong.org/syntax.html#tables [rtable]: https://dbushell.com/2016/03/04/css-only-responsive-tables/",
    "tags": "",
    "url": "/docs/writing/"
  },{
    "title": "Apache License",
    "text": "Version 2.0, January 2004 ## TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION ### 1. Definitions \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. ### 2. Grant of Copyright License Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. ### 3. Grant of Patent License Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. ### 4. Redistribution You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: {:style=\"list-style: lower-latin\"} 1. You must give any other recipients of the Work or Derivative Works a copy of this License; and 2. You must cause any modified files to carry prominent notices stating that You changed the files; and 3. You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and 4. If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. ### 5. Submission of Contributions Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. ### 6. Trademarks This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. ### 7. Disclaimer of Warranty Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. ### 8. Limitation of Liability In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. ### 9. Accepting Warranty or Additional Liability While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability END OF TERMS AND CONDITIONS ## APPENDIX: How to apply the Apache License to your work To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets `[]` replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same “printed page” as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
    "tags": "",
    "url": "/licenses/Apache-2.0/"
  },{
    "title": "GNU GENERAL PUBLIC LICENSE",
    "text": "Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. ## Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. ## TERMS AND CONDITIONS ### 0. Definitions \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. ### 1. Source Code The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. ### 2. Basic Permissions All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. ### 3. Protecting Users' Legal Rights From Anti-Circumvention Law No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. ### 4. Conveying Verbatim Copies You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. ### 5. Conveying Modified Source Versions You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: {:style=\"list-style-type:lower-latin\"} 1. The work must carry prominent notices stating that you modified it, and giving a relevant date. 2. The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". 3. You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. 4. If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. ### 6. Conveying Non-Source Forms You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: {:style=\"list-style-type:lower-latin\"} 1. Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. 2. Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. 3. Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. 4. Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. 5. Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. ### 7. Additional Terms \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: {:style=\"list-style-type:lower-latin\"} 1. Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or 2. Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or 3. Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or 4. Limiting the use for publicity purposes of names of licensors or authors of the material; or 5. Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or 6. Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. ### 8. Termination You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. ### 9. Acceptance Not Required for Having Copies You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. ### 10. Automatic Licensing of Downstream Recipients Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. ### 11. Patents A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. ### 12. No Surrender of Others' Freedom If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. ### 13. Use with the GNU Affero General Public License Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. ### 14. Revised Versions of this License The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. ### 15. Disclaimer of Warranty THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. ### 16. Limitation of Liability IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. ### 17. Interpretation of Sections 15 and 16 If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.",
    "tags": "",
    "url": "/licenses/GPL-3.0/"
  },{
    "title": "MIT License",
    "text": "Copyright (c) \\ \\ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "tags": "",
    "url": "/licenses/MIT/"
  },{
    "title": "PRO License",
    "text": "* this list will be replaced by the table of contents {:toc .large-only} ## License Summary * License concerns use of [Hydejack PRO][1] * License does not expire * Commercial use allowed * Can modify source code * Parts of software are provided under [separate licenses](/NOTICE/#licenses) ## Terms and Conditions ### 1. Preamble This Agreement governs the relationship between you (hereinafter: Licensee) and Florian Klampfer qwtel.com (hereinafter: Licensor). This Agreement sets the terms, rights, restrictions and obligations on using Hydejack PRO (hereinafter: The Software) created and owned by Licensor, as detailed herein. ### 2. License Grant Licensor hereby grants Licensee a Personal, Perpetual, Commercial, Royalty free, Including the rights to create derivative works, Non-exclusive license, all with accordance with the terms set forth and other legal restrictions set forth in 3rd party software used while running Software. 1. **Limited:** Licensee may use Software for the purpose of: 1. Running Software on Licensee’s Website[s] and Server[s]; 2. Allowing 3rd Parties to run Software on Licensee’s Website[s] and Server[s]; 3. Publishing Software’s output to Licensee and 3rd Parties; 4. Modify Software to suit Licensee’s needs and specifications. 2. This license is granted perpetually, as long as you do not materially breach it. 3. **Commercial, Royalty Free:** Licensee may use Software for any purpose, including paid-services, without any royalties 4. **Including the Right to Create Derivative Works:** Licensee may create derivative works based on Software, including amending Software’s source code, modifying it, integrating it into a larger work or removing portions of Software. ### 3. Term & Termination: The Term of this license shall be until terminated. Licensor may terminate this Agreement, including Licensee’s license in the case where Licensee: 1. became insolvent or otherwise entered into any liquidation process; or 2. exported The Software to any jurisdiction where licensor may not enforce his rights under this agreements in; or 3. Licensee was in breach of any of this license's terms and conditions and such breach was not cured, immediately upon notification; or 4. Licensee in breach of any of the terms of clause 2 to this license; or 5. Licensee otherwise entered into any arrangement which caused Licensor to be unable to enforce his rights under this License. ### 4. Payment In consideration of the License granted under clause 2, Licensee shall pay Licensor a fee, via Credit-Card or any other means which Licensor may deem adequate. Failure to perform payment shall construe as material breach of this Agreement. ### 5. Upgrades, Updates and Fixes Licensor may provide Licensee, from time to time, with Upgrades, Updates or Fixes, as detailed herein and according to his sole discretion. Licensee hereby warrants to keep The Software up-to-date and install all relevant updates and fixes, and may, at his sole discretion, purchase upgrades, according to the rates set by Licensor. Licensor shall provide any update or Fix free of charge; however, nothing in this Agreement shall require Licensor to provide Updates or Fixes. 1. **Upgrades:** for the purpose of this license, an Upgrade shall be a material amendment in The Software, which contains new features and or major performance improvements and shall be marked as a new version number. For example, should Licensee purchase The Software under version 1.X.X, an upgrade shall commence under number 2.0.0. 2. **Updates:** for the purpose of this license, an update shall be a minor amendment in The Software, which may contain new features or minor improvements and shall be marked as a new sub-version number. For example, should Licensee purchase The Software under version 1.1.X, an upgrade shall commence under number 1.2.0. 3. **Fix:** for the purpose of this license, a fix shall be a minor amendment in The Software, intended to remove bugs or alter minor features which impair the The Software's functionality. A fix shall be marked as a new sub-sub-version number. For example, should Licensee purchase Software under version 1.1.1, an upgrade shall commence under number 1.1.2. ### 6. Support Software is provided under an AS-IS basis and without any support, updates or maintenance. Nothing in this Agreement shall require Licensor to provide Licensee with support or fixes to any bug, failure, mis-performance or other defect in The Software. 1. **Bug Notification:** Licensee may provide Licensor of details regarding any bug, defect or failure in The Software promptly and with no delay from such event; Licensee shall comply with Licensor's request for information regarding bugs, defects or failures and furnish him with information, screenshots and try to reproduce such bugs, defects or failures. 2. **Feature Request:** Licensee may request additional features in Software, provided, however, that: 1. Licensee shall waive any claim or right in such feature should feature be developed by Licensor; 2. Licensee shall be prohibited from developing the feature, or disclose such feature request, or feature, to any 3rd party directly competing with Licensor or any 3rd party which may be, following the development of such feature, in direct competition with Licensor; 3. Licensee warrants that feature does not infringe any 3rd party patent, trademark, trade-secret or any other intellectual property right; and 4. Licensee developed, envisioned or created the feature solely by himself. ### 7. Liability To the extent permitted under Law, The Software is provided under an AS-IS basis. Licensor shall never, and without any limit, be liable for any damage, cost, expense or any other payment incurred by Licensee as a result of Software’s actions, failure, bugs and/or any other interaction between The Software and Licensee’s end-equipment, computers, other software or any 3rd party, end-equipment, computer or services. Moreover, Licensor shall never be liable for any defect in source code written by Licensee when relying on The Software or using The Software’s source code. ### 8. Warranty 1. **No-Warranty:** The Software is provided without any warranty; Licensor hereby disclaims any warranty that The Software shall be error free, without defects or code which may cause damage to Licensee’s computers or to Licensee, and that Software shall be functional. Licensee shall be solely liable to any damage, defect or loss incurred as a result of operating software and undertake the risks contained in running The Software on License’s Server[s] and Website[s]. 2. **Prior Inspection:** Licensee hereby states that he inspected The Software thoroughly and found it satisfactory and adequate to his needs, that it does not interfere with his regular operation and that it does meet the standards and scope of his computer systems and architecture. Licensee found that The Software interacts with his development, website and server environment and that it does not infringe any of End User License Agreement of any software Licensee may use in performing his services. Licensee hereby waives any claims regarding The Software's incompatibility, performance, results and features, and warrants that he inspected the The Software. ### 9. No Refunds Licensee warrants that he inspected The Software according to clause 8.2 and that it is adequate to his needs. Accordingly, as The Software is intangible goods, Licensee shall not be, ever, entitled to any refund, rebate, compensation or restitution for any reason whatsoever, even if The Software contains material flaws. ### 10. Indemnification Licensee hereby warrants to hold Licensor harmless and indemnify Licensor for any lawsuit brought against it in regards to Licensee’s use of The Software in means that violate, breach or otherwise circumvent this license, Licensor's intellectual property rights or Licensor's title in The Software. Licensor shall promptly notify Licensee in case of such legal action and request Licensee’s consent prior to any settlement in relation to such lawsuit or claim. ### 11. Governing Law, Jurisdiction Licensee hereby agrees not to initiate class-action lawsuits against Licensor in relation to this license and to compensate Licensor for any legal fees, cost or attorney fees should any claim brought by Licensee against Licensor be denied, in part or in full. [1]: https://hydejack.com/",
    "tags": "",
    "url": "/licenses/PRO/"
  },{
    "title": "W3C SOFTWARE NOTICE AND LICENSE",
    "text": "**Status**: This license takes effect 13 May, 2015. This work is being provided by the copyright holders under the following license. ## License By obtaining and/or copying this work, you (the licensee) agree that you have read, understood, and will comply with the following terms and conditions. Permission to copy, modify, and distribute this work, with or without modification, for any purpose and without fee or royalty is hereby granted, provided that you include the following on ALL copies of the work or portions thereof, including modifications: * The full text of this NOTICE in a location viewable to users of the redistributed or derivative work. * Any pre-existing intellectual property disclaimers, notices, or terms and conditions. If none exist, the W3C Software and Document Short Notice should be included. * Notice of any changes or modifications, through a copyright statement on the new code or document such as \"This software or document includes material copied from or derived from [title and URI of the W3C document]. Copyright © [YEAR] W3C® (MIT, ERCIM, Keio, Beihang).\" ## Disclaimers THIS WORK IS PROVIDED \"AS IS,\" AND COPYRIGHT HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR DOCUMENT WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS. COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENT. The name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the work without specific, written prior permission. Title to copyright in this work will at all times remain with copyright holders. ## Notes This version: Previous version: This version makes clear that the license is applicable to both software and text, by changing the name and substituting \"work\" for instances of \"software and its documentation.\" It moves \"notice of changes or modifications to the files\" to the copyright notice, to make clear that the license is compatible with other liberal licenses.",
    "tags": "",
    "url": "/licenses/W3C-20150513/"
  },{
    "title": "Licenses",
    "text": "## Open Source * [Apache-2.0](/licenses/Apache-2.0/) * [GPL-3.0](/licenses/GPL-3.0/) * [MIT](/licenses/MIT/) * [W3C-20150513](/licenses/W3C-20150513/) ## Custom * [PRO](/licenses/PRO/)",
    "tags": "",
    "url": "/licenses/"
  }]};
